{"version":3,"sources":["sevenguis/utils.cljs"],"mappings":";AAIA;;;AAAKA,8BAEH,AAAOC;AAGT;;;4BAAA,5BAAMC,gEAEHC;AAFH,AAGE,wBAAA,jBAACC,SAAYD;;AAGf;;;8BAAA,9BAAME,oEAEHF;AAFH,AAGE,0BAAA,nBAACG,WAAcH;;AAGjB;;;6BAAA,7BAAMI,kEAEHC;AAFH,AAGE,iDAAA,IAAA,9CAACC,uBAAYD;;AAGf;;;6BAAA,7BAAME,kEAEHC,KAAKC;AAFR,AAGE,OAACC,6CAAK,oDAAA,pDAACC,+CAAOH,SAAOC,KAAK,AAACE,+CAAOH,KAAK,OAAA,NAAKC;;AAG9C;;;kCAAA,lCAAMG,4EAEHC;AAFH,AAGE,AAAkBA;;AAClB,OAAiBA;;AAGnB;;;6BAAA,7BAAMC,kEAEHC,EAAEP;AAFL,AAGE,OAACQ,gBAAM,AAACC,+CAAOF,EAAEP;;AAGnB;;;6BAAA,7BAAMU,kEAEHC,MAAMC;AAFT,AAGE,OAACC,4CAAIC,gBAAK,AAACC,8CAAM,SAAA,RAAKJ,aAAO,eAAA,dAAK,OAAA,NAAKC;;AAGzC;;;4BAAA,5BAAMI,gEAEHhB,KAAKiB;AAFR,AAGE,sBAAA,WAAAC,1BAACC;AAAD,AAAO,uDAAAD,hDAACE,6CAAEH;GAAMjB;;AAGlB;;;AAAKqB,2BAEH,KAAAC,KAAU,AAAMA;AAGlB,AAAA;;;8BAAA,sCAAAC,pEAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,0DAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,0DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,4DAAA,5DAAMD,uEAEFE;AAFJ,AAGG,sEAAA,/DAACC,0DAAYD;;;AAHhB,CAAA,4DAAA,5DAAMF,uEAIFE,KAAKE;AAJT,AAKG,IAAMC,OAAM,4CAAK,AAAcH;IACzBI,QAAM,4CAAK,mBAAA,lBAAK,AAAWJ;IAC3BK,MAAM,4CAAK,AAAUL;AAF3B,AAGE,QAAK,0BAAA,AAAA,IAAA,5BAAM,kBAAA,jBAAG,EAAOK,+BAAaA,gDAC7BH,KACA,4BAAA,AAAA,IAAA,9BAAM,oBAAA,nBAAG,EAAOE,iCAAeA,kDAC/BF,KACAC;;;AAZV,CAAA,sDAAA,tDAAML;;AAAN","names":["sevenguis.utils/console-log","js/console","sevenguis.utils/parse-int","integer","js/parseInt","sevenguis.utils/parse-float","js/parseFloat","sevenguis.utils/escape-str","string-with-spaces","clojure.string/replace","sevenguis.utils/vec-remove","coll","pos","cljs.core.into","cljs.core.subvec","sevenguis.utils/prevent-default","e","sevenguis.utils/find-first","f","cljs.core/first","cljs.core.filter","sevenguis.utils/char-range","start","end","cljs.core.map","cljs.core/char","cljs.core.range","sevenguis.utils/in?","el","p1__57407#","cljs.core/some","cljs.core._EQ_","sevenguis.utils/date-now","js/Date","var_args","G__57409","sevenguis.utils/format-date","js/Error","date","sevenguis.utils.format_date","sep","year","month","day"],"sourcesContent":["(ns sevenguis.utils\n  (:require [clojure.string :as str]))\n\n\n(def console-log\n  \"Log to js console\"\n  (.-log js/console))\n\n\n(defn parse-int\n  \"Parse a string of integer into an int value\"\n  [integer]\n  (js/parseInt integer 10))\n\n\n(defn parse-float\n  \"Parse a string of integer into an int value\"\n  [integer]\n  (js/parseFloat integer 10))\n\n\n(defn escape-str\n  \"Escape a string replacing spaces with `-`\"\n  [string-with-spaces]\n  (str/replace string-with-spaces #\" \" \"-\"))\n\n\n(defn vec-remove\n  \"Remove elem in coll\"\n  [coll pos]\n  (into (subvec coll 0 pos) (subvec coll (inc pos))))\n\n\n(defn prevent-default\n  \"Prevent default and propagation of a DOM event\"\n  [e]\n  (.stopPropagation e)\n  (.preventDefault e))\n\n\n(defn find-first\n  \"First item in a collection that satisfy the predicate\"\n  [f coll]\n  (first (filter f coll)))\n\n\n(defn char-range\n  \"Generate a range sequence of characters\"\n  [start end]\n  (map char (range (int start) (inc (int end)))))\n\n\n(defn in?\n  \"true if coll contains el\"\n  [coll el]\n  (some #(= el %) coll))\n\n\n(def date-now\n  \"Get current time in a js Date object\"\n  (js/Date. (.now js/Date)))\n\n\n(defn format-date\n  \"Format date as dd-MM-yyyy\"\n  ([date]\n   (format-date date \".\"))\n  ([date sep]\n   (let [year  (str (.getFullYear date))\n         month (str (inc (.getMonth date)))\n         day   (str (.getDate date))]\n     (str (when (< (count day) 2) \"0\") day\n          sep\n          (when (< (count month) 2) \"0\") month\n          sep\n          year))))\n"]}