{"version":3,"sources":["sevenguis/components.cljs"],"mappings":"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","names":["sevenguis.components/ui-task","title","task","var_args","G__38996","sevenguis.components/ui-button","js/Error","on-click","sevenguis.components.ui_button","disabled","cljs.core.merge","cljs.core/deref","p1__38997#","sevenguis.components/ui-input","input-type","input-value","cljs.core/reset!","sevenguis.components/ui-list-box","items","on-change","iter__4611__auto__","s__38999","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__39001","cljs.core/chunk-buffer","i__39000","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__38998","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","index","cljs.core.range","item","cljs.core.get","item-name","item-last","item-key","sevenguis.utils/escape-str","item-str","G__39004","sevenguis.components/input-change","input-name","input-class","on-change-evt","sevenguis.components.input_change","is-valid","p1__39002#","sevenguis.components/input-range","min","max","value","cljs.core/chunk-first"],"sourcesContent":["(ns sevenguis.components\n  (:require [sevenguis.utils :as utils]))\n\n;; -------------------------\n;; UI Components\n\n(defn ui-task\n  \"Component to wrap a single task\"\n  [title task]\n  [:div {:class \"UI-task\"}\n   [:h2 title]\n   [:div {:class \"UI-task-container\"} [task]]])\n\n\n(defn ui-button\n  \"Button with an on-click event handler\"\n  ([title on-click]\n   (ui-button title on-click false))\n  ([title on-click disabled]\n   [:input (merge\n            {:type     \"button\"\n             :class    \"UI-button\"\n             :value    title\n             :on-click #(on-click)}\n            (when disabled\n              {:disabled true}))]))\n\n\n(defn ui-input\n  \"Simple input element\"\n  [input-type input-value]\n  [:input {:type      input-type\n           :value     @input-value\n           :class     \"UI-input\"\n           :on-change #(reset! input-value (-> % .-target .-value))}])\n\n\n(defn ui-list-box\n  \"List box made of select and different options\"\n  [items on-change]\n  [:select {:size      4\n            :class     \"UI-list-box\"\n            :on-change on-change}\n   (for [index (range (count items))]\n     (let [item      (get items index)\n           item-name (get item :name)\n           item-last (get item :surname)\n           item-key  (str \"item-\"\n                          (utils/escape-str item-name)\n                          \"-\"\n                          (utils/escape-str item-last))\n           item-str  (str item-name \", \" item-last)]\n       [:option {:name  item-key\n                 :key   item-key\n                 :value index} item-str]))])\n\n\n(defn input-change\n  \"An full input element with callback on change, class, validation, disable, etc.\"\n  ([input-name input-type input-class input-value on-change-evt]\n   (input-change input-name input-type input-class input-value on-change-evt true false))\n  ([input-name input-type input-class input-value on-change-evt is-valid]\n   (input-change input-name input-type input-class input-value on-change-evt is-valid false))\n  ([input-name input-type input-class input-value on-change-evt is-valid disabled]\n   [:input (merge {:type      input-type\n                   :name      input-name\n                   :value     @input-value\n                   :class     (str \"UI-input \" input-class (when (false? is-valid) \" input-error\"))\n                   :on-change #(on-change-evt %)}\n                  (when disabled\n                    {:disabled true}))]))\n\n\n(defn input-range\n  [min max value on-change]\n  [:input {:type      \"range\"\n           :min       min\n           :max       max\n           :value     value\n           :on-change on-change}])\n"]}