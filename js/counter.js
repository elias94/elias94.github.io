SHADOW_ENV.evalLoad("shadow.js.js", true , "goog.provide(\x22shadow.js\x22);\nshadow.js.files \x3d {};\nshadow.js.nativeRequires \x3d {};\nshadow.js.NODE_ENV \x3d goog.define(\x22shadow.js.NODE_ENV\x22, \x22development\x22);\nshadow.js.requireStack \x3d [];\nshadow.js.add_native_require \x3d function(name, obj) {\n  shadow.js.nativeRequires[name] \x3d obj;\n};\nshadow.js.jsRequire \x3d function(name, opts) {\n  var nativeObj \x3d shadow.js.nativeRequires[name];\n  if (nativeObj !\x3d\x3d undefined) {\n    return nativeObj;\n  }\n  try {\n    if (goog.DEBUG) {\n      if (name instanceof String \x26\x26 name.indexOf(\x22/\x22) !\x3d -1) {\n        console.warn(\x22Tried to dynamically require \x27\x22 + name + \x22\x27 from \x27\x22 + shadow.js.requireStack[shadow.js.requireStack.length - 1] + \x22\x27. This is not supported and may cause issues.\x22);\n      }\n    }\n    shadow.js.requireStack.push(name);\n    var module \x3d shadow.js.files[name];\n    var moduleFn \x3d shadow$provide[name];\n    if (module \x3d\x3d\x3d undefined) {\n      if (moduleFn \x3d\x3d\x3d undefined) {\n        throw \x22Module not provided: \x22 + name;\n      }\n      module \x3d {};\n      module[\x22exports\x22] \x3d {};\n      shadow.js.files[name] \x3d module;\n    }\n    if (moduleFn) {\n      delete shadow$provide[name];\n      try {\n        moduleFn.call(module, goog.global, shadow.js.jsRequire, module, module[\x22exports\x22]);\n      } catch (e) {\n        console.warn(\x22shadow-cljs - failed to load\x22, name);\n        throw e;\n      }\n      if (opts) {\n        var globals \x3d opts[\x22globals\x22];\n        if (globals) {\n          for (var i \x3d 0; i \x3c globals.length; i++) {\n            window[globals[i]] \x3d module[\x22exports\x22];\n          }\n        }\n      }\n    }\n  } finally {\n    shadow.js.requireStack.pop();\n  }\n  return module[\x22exports\x22];\n};\nshadow.js.jsRequire.cache \x3d {};\nshadow.js.jsRequire.resolve \x3d function(name) {\n  return name;\n};\nshadow.js.modules \x3d {};\nshadow.js.require \x3d function(name, opts) {\n  return shadow.js.jsRequire(name, opts);\n};\n");
SHADOW_ENV.evalLoad("module$node_modules$object_assign$index.js", true , "shadow$provide.module$node_modules$object_assign$index\x3dfunction(global,require,module,exports){var getOwnPropertySymbols\x3dObject.getOwnPropertySymbols,hasOwnProperty\x3dObject.prototype.hasOwnProperty,propIsEnumerable\x3dObject.prototype.propertyIsEnumerable;module.exports\x3dfunction(){try{if(!Object.assign)return!1;var test1\x3dnew String(\x22abc\x22);test1[5]\x3d\x22de\x22;if(\x225\x22\x3d\x3d\x3dObject.getOwnPropertyNames(test1)[0])return!1;var test2\x3d{};for(test1\x3d0;10\x3etest1;test1++)test2[\x22_\x22+String.fromCharCode(test1)]\x3dtest1;if(\x220123456789\x22!\x3d\x3d\nObject.getOwnPropertyNames(test2).map(function(n){return test2[n]}).join(\x22\x22))return!1;var test3\x3d{};\x22abcdefghijklmnopqrst\x22.split(\x22\x22).forEach(function(letter){test3[letter]\x3dletter});return\x22abcdefghijklmnopqrst\x22!\x3d\x3dObject.keys(Object.assign({},test3)).join(\x22\x22)?!1:!0}catch(err){return!1}}()?Object.assign:function(target,source){if(null\x3d\x3d\x3dtarget||void 0\x3d\x3d\x3dtarget)throw new TypeError(\x22Object.assign cannot be called with null or undefined\x22);var to\x3dObject(target);for(var symbols,s\x3d1;s\x3carguments.length;s++){var from\x3d\nObject(arguments[s]);for(var key in from)hasOwnProperty.call(from,key)\x26\x26(to[key]\x3dfrom[key]);if(getOwnPropertySymbols){symbols\x3dgetOwnPropertySymbols(from);for(var i\x3d0;i\x3csymbols.length;i++)propIsEnumerable.call(from,symbols[i])\x26\x26(to[symbols[i]]\x3dfrom[symbols[i]])}}return to}}");
SHADOW_ENV.evalLoad("module$node_modules$react$cjs$react_development.js", true , "shadow$provide.module$node_modules$react$cjs$react_development\x3dfunction(global,require,module,exports){(function(){function getIteratorFn(maybeIterable){if(null\x3d\x3d\x3dmaybeIterable||\x22object\x22!\x3d\x3dtypeof maybeIterable)return null;maybeIterable\x3dMAYBE_ITERATOR_SYMBOL\x26\x26maybeIterable[MAYBE_ITERATOR_SYMBOL]||maybeIterable[\x22@@iterator\x22];return\x22function\x22\x3d\x3d\x3dtypeof maybeIterable?maybeIterable:null}function warn(format){for(var _len\x3darguments.length,args\x3dArray(1\x3c_len?_len-1:0),_key\x3d1;_key\x3c_len;_key++)args[_key-1]\x3d\narguments[_key];printWarning(\x22warn\x22,format,args)}function error$jscomp$0(format){for(var _len2\x3darguments.length,args\x3dArray(1\x3c_len2?_len2-1:0),_key2\x3d1;_key2\x3c_len2;_key2++)args[_key2-1]\x3darguments[_key2];printWarning(\x22error\x22,format,args)}function printWarning(level,format,args){var stack\x3dReactSharedInternals.ReactDebugCurrentFrame.getStackAddendum();\x22\x22!\x3d\x3dstack\x26\x26(format+\x3d\x22%s\x22,args\x3dargs.concat([stack]));args\x3dargs.map(function(item){return\x22\x22+item});args.unshift(\x22Warning: \x22+format);Function.prototype.apply.call(console[level],\nconsole,args)}function warnNoop(publicInstance,callerName){publicInstance\x3d(publicInstance\x3dpublicInstance.constructor)\x26\x26(publicInstance.displayName||publicInstance.name)||\x22ReactClass\x22;var warningKey\x3dpublicInstance+\x22.\x22+callerName;didWarnStateUpdateForUnmountedComponent[warningKey]||(error$jscomp$0(\x22Can\x27t call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state \\x3d {};` class property with the desired state in the %s component.\x22,\ncallerName,publicInstance),didWarnStateUpdateForUnmountedComponent[warningKey]\x3d!0)}function Component(props,context,updater){this.props\x3dprops;this.context\x3dcontext;this.refs\x3demptyObject;this.updater\x3dupdater||ReactNoopUpdateQueue}function ComponentDummy(){}function PureComponent(props,context,updater){this.props\x3dprops;this.context\x3dcontext;this.refs\x3demptyObject;this.updater\x3dupdater||ReactNoopUpdateQueue}function getComponentName(type){if(null\x3d\x3dtype)return null;\x22number\x22\x3d\x3d\x3dtypeof type.tag\x26\x26error$jscomp$0(\x22Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.\x22);\nif(\x22function\x22\x3d\x3d\x3dtypeof type)return type.displayName||type.name||null;if(\x22string\x22\x3d\x3d\x3dtypeof type)return type;switch(type){case exports.Fragment:return\x22Fragment\x22;case REACT_PORTAL_TYPE:return\x22Portal\x22;case exports.Profiler:return\x22Profiler\x22;case exports.StrictMode:return\x22StrictMode\x22;case exports.Suspense:return\x22Suspense\x22;case REACT_SUSPENSE_LIST_TYPE:return\x22SuspenseList\x22}if(\x22object\x22\x3d\x3d\x3dtypeof type)switch(type.$$typeof){case REACT_CONTEXT_TYPE:return(type.displayName||\x22Context\x22)+\x22.Consumer\x22;case REACT_PROVIDER_TYPE:return(type._context.displayName||\n\x22Context\x22)+\x22.Provider\x22;case REACT_FORWARD_REF_TYPE:var innerType\x3dtype.render;innerType\x3dinnerType.displayName||innerType.name||\x22\x22;return type.displayName||(\x22\x22!\x3d\x3dinnerType?\x22ForwardRef(\x22+innerType+\x22)\x22:\x22ForwardRef\x22);case REACT_MEMO_TYPE:return getComponentName(type.type);case REACT_BLOCK_TYPE:return getComponentName(type._render);case REACT_LAZY_TYPE:innerType\x3dtype._payload;type\x3dtype._init;try{return getComponentName(type(innerType))}catch(x){}}return null}function hasValidRef(config){if(hasOwnProperty.call(config,\n\x22ref\x22)){var getter\x3dObject.getOwnPropertyDescriptor(config,\x22ref\x22).get;if(getter\x26\x26getter.isReactWarning)return!1}return void 0!\x3d\x3dconfig.ref}function hasValidKey(config){if(hasOwnProperty.call(config,\x22key\x22)){var getter\x3dObject.getOwnPropertyDescriptor(config,\x22key\x22).get;if(getter\x26\x26getter.isReactWarning)return!1}return void 0!\x3d\x3dconfig.key}function defineKeyPropWarningGetter(props,displayName){var warnAboutAccessingKey\x3dfunction(){specialPropKeyWarningShown||(specialPropKeyWarningShown\x3d!0,error$jscomp$0(\x22%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\x22,\ndisplayName))};warnAboutAccessingKey.isReactWarning\x3d!0;Object.defineProperty(props,\x22key\x22,{get:warnAboutAccessingKey,configurable:!0})}function defineRefPropWarningGetter(props,displayName){var warnAboutAccessingRef\x3dfunction(){specialPropRefWarningShown||(specialPropRefWarningShown\x3d!0,error$jscomp$0(\x22%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\x22,\ndisplayName))};warnAboutAccessingRef.isReactWarning\x3d!0;Object.defineProperty(props,\x22ref\x22,{get:warnAboutAccessingRef,configurable:!0})}function createElement(type,config,children){var props\x3d{},key\x3dnull,ref\x3dnull,self\x3dnull,source\x3dnull;if(null!\x3dconfig)for(propName in hasValidRef(config)\x26\x26(ref\x3dconfig.ref,\x22string\x22\x3d\x3d\x3dtypeof config.ref\x26\x26ReactCurrentOwner.current\x26\x26config.__self\x26\x26ReactCurrentOwner.current.stateNode!\x3d\x3dconfig.__self\x26\x26(self\x3dgetComponentName(ReactCurrentOwner.current.type),didWarnAboutStringRefs[self]||\n(error$jscomp$0(\x27Component \x22%s\x22 contains the string ref \x22%s\x22. Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref\x27,self,config.ref),didWarnAboutStringRefs[self]\x3d!0))),hasValidKey(config)\x26\x26(key\x3d\x22\x22+config.key),self\x3dvoid 0\x3d\x3d\x3dconfig.__self?null:config.__self,\nsource\x3dvoid 0\x3d\x3d\x3dconfig.__source?null:config.__source,config)hasOwnProperty.call(config,propName)\x26\x26!RESERVED_PROPS.hasOwnProperty(propName)\x26\x26(props[propName]\x3dconfig[propName]);var childrenLength\x3darguments.length-2;if(1\x3d\x3d\x3dchildrenLength)props.children\x3dchildren;else if(1\x3cchildrenLength){for(var childArray\x3dArray(childrenLength),i\x3d0;i\x3cchildrenLength;i++)childArray[i]\x3darguments[i+2];Object.freeze\x26\x26Object.freeze(childArray);props.children\x3dchildArray}if(type\x26\x26type.defaultProps)for(propName in childrenLength\x3d\ntype.defaultProps,childrenLength)void 0\x3d\x3d\x3dprops[propName]\x26\x26(props[propName]\x3dchildrenLength[propName]);if(key||ref){var propName\x3d\x22function\x22\x3d\x3d\x3dtypeof type?type.displayName||type.name||\x22Unknown\x22:type;key\x26\x26defineKeyPropWarningGetter(props,propName);ref\x26\x26defineRefPropWarningGetter(props,propName)}return ReactElement(type,key,ref,self,source,ReactCurrentOwner.current,props)}function cloneAndReplaceKey(oldElement,newKey){return ReactElement(oldElement.type,newKey,oldElement.ref,oldElement._self,oldElement._source,\noldElement._owner,oldElement.props)}function cloneElement(element,config,children){if(null\x3d\x3d\x3delement||void 0\x3d\x3d\x3delement)throw Error(\x22React.cloneElement(...): The argument must be a React element, but you passed \x22+element+\x22.\x22);var props\x3d_assign({},element.props),key\x3delement.key,ref\x3delement.ref,self\x3delement._self,source\x3delement._source,owner\x3delement._owner;if(null!\x3dconfig){hasValidRef(config)\x26\x26(ref\x3dconfig.ref,owner\x3dReactCurrentOwner.current);hasValidKey(config)\x26\x26(key\x3d\x22\x22+config.key);if(element.type\x26\x26\nelement.type.defaultProps)var defaultProps\x3delement.type.defaultProps;for(propName in config)hasOwnProperty.call(config,propName)\x26\x26!RESERVED_PROPS.hasOwnProperty(propName)\x26\x26(props[propName]\x3dvoid 0\x3d\x3d\x3dconfig[propName]\x26\x26void 0!\x3d\x3ddefaultProps?defaultProps[propName]:config[propName])}var propName\x3darguments.length-2;if(1\x3d\x3d\x3dpropName)props.children\x3dchildren;else if(1\x3cpropName){defaultProps\x3dArray(propName);for(var i\x3d0;i\x3cpropName;i++)defaultProps[i]\x3darguments[i+2];props.children\x3ddefaultProps}return ReactElement(element.type,\nkey,ref,self,source,owner,props)}function isValidElement(object){return\x22object\x22\x3d\x3d\x3dtypeof object\x26\x26null!\x3d\x3dobject\x26\x26object.$$typeof\x3d\x3d\x3dREACT_ELEMENT_TYPE}function escape(key){var escaperLookup\x3d{\x22\\x3d\x22:\x22\\x3d0\x22,\x22:\x22:\x22\\x3d2\x22};return\x22$\x22+key.replace(/[\x3d:]/g,function(match){return escaperLookup[match]})}function getElementKey(element,index){return\x22object\x22\x3d\x3d\x3dtypeof element\x26\x26null!\x3d\x3delement\x26\x26null!\x3delement.key?escape(\x22\x22+element.key):index.toString(36)}function mapIntoArray(children,array,escapedPrefix,nameSoFar,\ncallback){var type\x3dtypeof children;if(\x22undefined\x22\x3d\x3d\x3dtype||\x22boolean\x22\x3d\x3d\x3dtype)children\x3dnull;var invokeCallback\x3d!1;if(null\x3d\x3d\x3dchildren)invokeCallback\x3d!0;else switch(type){case \x22string\x22:case \x22number\x22:invokeCallback\x3d!0;break;case \x22object\x22:switch(children.$$typeof){case REACT_ELEMENT_TYPE:case REACT_PORTAL_TYPE:invokeCallback\x3d!0}}if(invokeCallback)return invokeCallback\x3dchildren,callback\x3dcallback(invokeCallback),nameSoFar\x3d\x22\x22\x3d\x3d\x3dnameSoFar?\x22.\x22+getElementKey(invokeCallback,0):nameSoFar,Array.isArray(callback)?\n(escapedPrefix\x3d\x22\x22,null!\x3dnameSoFar\x26\x26(escapedPrefix\x3dnameSoFar.replace(userProvidedKeyEscapeRegex,\x22$\\x26/\x22)+\x22/\x22),mapIntoArray(callback,array,escapedPrefix,\x22\x22,function(c){return c})):null!\x3dcallback\x26\x26(isValidElement(callback)\x26\x26(callback\x3dcloneAndReplaceKey(callback,escapedPrefix+(!callback.key||invokeCallback\x26\x26invokeCallback.key\x3d\x3d\x3dcallback.key?\x22\x22:(\x22\x22+callback.key).replace(userProvidedKeyEscapeRegex,\x22$\\x26/\x22)+\x22/\x22)+nameSoFar)),array.push(callback)),1;invokeCallback\x3d0;nameSoFar\x3d\x22\x22\x3d\x3d\x3dnameSoFar?\x22.\x22:nameSoFar+\n\x22:\x22;if(Array.isArray(children))for(var i\x3d0;i\x3cchildren.length;i++){type\x3dchildren[i];var nextName\x3dnameSoFar+getElementKey(type,i);invokeCallback+\x3dmapIntoArray(type,array,escapedPrefix,nextName,callback)}else if(nextName\x3dgetIteratorFn(children),\x22function\x22\x3d\x3d\x3dtypeof nextName)for(nextName\x3d\x3d\x3dchildren.entries\x26\x26(didWarnAboutMaps||warn(\x22Using Maps as children is not supported. Use an array of keyed ReactElements instead.\x22),didWarnAboutMaps\x3d!0),children\x3dnextName.call(children),i\x3d0;!(type\x3dchildren.next()).done;)type\x3d\ntype.value,nextName\x3dnameSoFar+getElementKey(type,i++),invokeCallback+\x3dmapIntoArray(type,array,escapedPrefix,nextName,callback);else if(\x22object\x22\x3d\x3d\x3dtype)throw array\x3d\x22\x22+children,Error(\x22Objects are not valid as a React child (found: \x22+(\x22[object Object]\x22\x3d\x3d\x3darray?\x22object with keys {\x22+Object.keys(children).join(\x22, \x22)+\x22}\x22:array)+\x22). If you meant to render a collection of children, use an array instead.\x22);return invokeCallback}function mapChildren(children,func,context){if(null\x3d\x3dchildren)return children;var result\x3d\n[],count\x3d0;mapIntoArray(children,result,\x22\x22,\x22\x22,function(child){return func.call(context,child,count++)});return result}function lazyInitializer(payload){if(-1\x3d\x3d\x3dpayload._status){var ctor\x3dpayload._result;ctor\x3dctor();payload._status\x3d0;payload._result\x3dctor;ctor.then(function(moduleObject){if(0\x3d\x3d\x3dpayload._status){var defaultExport\x3dmoduleObject.default;void 0\x3d\x3d\x3ddefaultExport\x26\x26error$jscomp$0(\x22lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent \\x3d lazy(() \\x3d\\x3e import(\x27./MyComponent\x27))\x22,\nmoduleObject);payload._status\x3d1;payload._result\x3ddefaultExport}},function(error){0\x3d\x3d\x3dpayload._status\x26\x26(payload._status\x3d2,payload._result\x3derror)})}if(1\x3d\x3d\x3dpayload._status)return payload._result;throw payload._result;}function isValidElementType(type){return\x22string\x22\x3d\x3d\x3dtypeof type||\x22function\x22\x3d\x3d\x3dtypeof type||type\x3d\x3d\x3dexports.Fragment||type\x3d\x3d\x3dexports.Profiler||type\x3d\x3d\x3dREACT_DEBUG_TRACING_MODE_TYPE||type\x3d\x3d\x3dexports.StrictMode||type\x3d\x3d\x3dexports.Suspense||type\x3d\x3d\x3dREACT_SUSPENSE_LIST_TYPE||type\x3d\x3d\x3dREACT_LEGACY_HIDDEN_TYPE||\n\x22object\x22\x3d\x3d\x3dtypeof type\x26\x26null!\x3d\x3dtype\x26\x26(type.$$typeof\x3d\x3d\x3dREACT_LAZY_TYPE||type.$$typeof\x3d\x3d\x3dREACT_MEMO_TYPE||type.$$typeof\x3d\x3d\x3dREACT_PROVIDER_TYPE||type.$$typeof\x3d\x3d\x3dREACT_CONTEXT_TYPE||type.$$typeof\x3d\x3d\x3dREACT_FORWARD_REF_TYPE||type.$$typeof\x3d\x3d\x3dREACT_FUNDAMENTAL_TYPE||type.$$typeof\x3d\x3d\x3dREACT_BLOCK_TYPE||type[0]\x3d\x3d\x3dREACT_SERVER_BLOCK_TYPE)?!0:!1}function resolveDispatcher(){var dispatcher\x3dReactCurrentDispatcher.current;if(null\x3d\x3d\x3ddispatcher)throw Error(\x22Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\x22);\nreturn dispatcher}function disabledLog(){}function disableLogs(){if(0\x3d\x3d\x3ddisabledDepth){prevLog\x3dconsole.log;prevInfo\x3dconsole.info;prevWarn\x3dconsole.warn;prevError\x3dconsole.error;prevGroup\x3dconsole.group;prevGroupCollapsed\x3dconsole.groupCollapsed;prevGroupEnd\x3dconsole.groupEnd;var props\x3d{configurable:!0,enumerable:!0,value:disabledLog,writable:!0};Object.defineProperties(console,{info:props,log:props,warn:props,error:props,group:props,groupCollapsed:props,groupEnd:props})}disabledDepth++}function reenableLogs(){disabledDepth--;\nif(0\x3d\x3d\x3ddisabledDepth){var props\x3d{configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:_assign({},props,{value:prevLog}),info:_assign({},props,{value:prevInfo}),warn:_assign({},props,{value:prevWarn}),error:_assign({},props,{value:prevError}),group:_assign({},props,{value:prevGroup}),groupCollapsed:_assign({},props,{value:prevGroupCollapsed}),groupEnd:_assign({},props,{value:prevGroupEnd})})}0\x3edisabledDepth\x26\x26error$jscomp$0(\x22disabledDepth fell below zero. This is a bug in React. Please file an issue.\x22)}\nfunction describeBuiltInComponentFrame(name,source,ownerFn){if(void 0\x3d\x3d\x3dprefix)try{throw Error();}catch(x){prefix\x3d(source\x3dx.stack.trim().match(/\\n( *(at )?)/))\x26\x26source[1]||\x22\x22}return\x22\\n\x22+prefix+name}function describeNativeComponentFrame(fn,construct){if(!fn||reentry)return\x22\x22;var frame\x3dcomponentFrameCache.get(fn);if(void 0!\x3d\x3dframe)return frame;reentry\x3d!0;frame\x3dError.prepareStackTrace;Error.prepareStackTrace\x3dvoid 0;var previousDispatcher\x3dReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current\x3d\nnull;disableLogs();try{if(construct)if(construct\x3dfunction(){throw Error();},Object.defineProperty(construct.prototype,\x22props\x22,{set:function(){throw Error();}}),\x22object\x22\x3d\x3d\x3dtypeof Reflect\x26\x26Reflect.construct){try{Reflect.construct(construct,[])}catch(x){var control\x3dx}Reflect.construct(fn,[],construct)}else{try{construct.call()}catch(x){control\x3dx}fn.call(construct.prototype)}else{try{throw Error();}catch(x){control\x3dx}fn()}}catch(sample){if(sample\x26\x26control\x26\x26\x22string\x22\x3d\x3d\x3dtypeof sample.stack){for(var sampleLines\x3d\nsample.stack.split(\x22\\n\x22),controlLines\x3dcontrol.stack.split(\x22\\n\x22),s\x3dsampleLines.length-1,c\x3dcontrolLines.length-1;1\x3c\x3ds\x26\x260\x3c\x3dc\x26\x26sampleLines[s]!\x3d\x3dcontrolLines[c];)c--;for(;1\x3c\x3ds\x26\x260\x3c\x3dc;s--,c--)if(sampleLines[s]!\x3d\x3dcontrolLines[c]){if(1!\x3d\x3ds||1!\x3d\x3dc){do if(s--,c--,0\x3ec||sampleLines[s]!\x3d\x3dcontrolLines[c]){var _frame\x3d\x22\\n\x22+sampleLines[s].replace(\x22 at new \x22,\x22 at \x22);\x22function\x22\x3d\x3d\x3dtypeof fn\x26\x26componentFrameCache.set(fn,_frame);return _frame}while(1\x3c\x3ds\x26\x260\x3c\x3dc)}break}}}finally{reentry\x3d!1,ReactCurrentDispatcher$1.current\x3d\npreviousDispatcher,reenableLogs(),Error.prepareStackTrace\x3dframe}control\x3d(control\x3dfn?fn.displayName||fn.name:\x22\x22)?describeBuiltInComponentFrame(control):\x22\x22;\x22function\x22\x3d\x3d\x3dtypeof fn\x26\x26componentFrameCache.set(fn,control);return control}function describeUnknownElementTypeFrameInDEV(type,source,ownerFn){if(null\x3d\x3dtype)return\x22\x22;if(\x22function\x22\x3d\x3d\x3dtypeof type)return source\x3dtype.prototype,describeNativeComponentFrame(type,!(!source||!source.isReactComponent));if(\x22string\x22\x3d\x3d\x3dtypeof type)return describeBuiltInComponentFrame(type);\nswitch(type){case exports.Suspense:return describeBuiltInComponentFrame(\x22Suspense\x22);case REACT_SUSPENSE_LIST_TYPE:return describeBuiltInComponentFrame(\x22SuspenseList\x22)}if(\x22object\x22\x3d\x3d\x3dtypeof type)switch(type.$$typeof){case REACT_FORWARD_REF_TYPE:return type\x3ddescribeNativeComponentFrame(type.render,!1),type;case REACT_MEMO_TYPE:return describeUnknownElementTypeFrameInDEV(type.type,source,ownerFn);case REACT_BLOCK_TYPE:return type\x3ddescribeNativeComponentFrame(type._render,!1),type;case REACT_LAZY_TYPE:var payload\x3d\ntype._payload;type\x3dtype._init;try{return describeUnknownElementTypeFrameInDEV(type(payload),source,ownerFn)}catch(x){}}return\x22\x22}function setCurrentlyValidatingElement(element){if(element){var owner\x3delement._owner;element\x3ddescribeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null);ReactDebugCurrentFrame$1.setExtraStackFrame(element)}else ReactDebugCurrentFrame$1.setExtraStackFrame(null)}function setCurrentlyValidatingElement$1(element){if(element){var owner\x3delement._owner;\ncurrentExtraStackFrame\x3ddescribeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null)}else currentExtraStackFrame\x3dnull}function getDeclarationErrorAddendum(){if(ReactCurrentOwner.current){var name\x3dgetComponentName(ReactCurrentOwner.current.type);if(name)return\x22\\n\\nCheck the render method of `\x22+name+\x22`.\x22}return\x22\x22}function validateExplicitKey(element,parentType){if(element._store\x26\x26!element._store.validated\x26\x26null\x3d\x3delement.key){element._store.validated\x3d!0;var currentComponentErrorInfo\x3d\ngetDeclarationErrorAddendum();currentComponentErrorInfo||(parentType\x3d\x22string\x22\x3d\x3d\x3dtypeof parentType?parentType:parentType.displayName||parentType.name)\x26\x26(currentComponentErrorInfo\x3d\x22\\n\\nCheck the top-level render call using \\x3c\x22+parentType+\x22\\x3e.\x22);ownerHasKeyUseWarning[currentComponentErrorInfo]||(ownerHasKeyUseWarning[currentComponentErrorInfo]\x3d!0,parentType\x3d\x22\x22,element\x26\x26element._owner\x26\x26element._owner!\x3d\x3dReactCurrentOwner.current\x26\x26(parentType\x3d\x22 It was passed a child from \x22+getComponentName(element._owner.type)+\n\x22.\x22),setCurrentlyValidatingElement$1(element),error$jscomp$0(\x27Each child in a list should have a unique \x22key\x22 prop.%s%s See https://reactjs.org/link/warning-keys for more information.\x27,currentComponentErrorInfo,parentType),setCurrentlyValidatingElement$1(null))}}function validateChildKeys(node,parentType){if(\x22object\x22\x3d\x3d\x3dtypeof node)if(Array.isArray(node))for(var i\x3d0;i\x3cnode.length;i++){var child\x3dnode[i];isValidElement(child)\x26\x26validateExplicitKey(child,parentType)}else if(isValidElement(node))node._store\x26\x26\n(node._store.validated\x3d!0);else if(node\x26\x26(i\x3dgetIteratorFn(node),\x22function\x22\x3d\x3d\x3dtypeof i\x26\x26i!\x3d\x3dnode.entries))for(node\x3di.call(node);!(i\x3dnode.next()).done;)isValidElement(i.value)\x26\x26validateExplicitKey(i.value,parentType)}function validatePropTypes(element){var type\x3delement.type;if(null!\x3d\x3dtype\x26\x26void 0!\x3d\x3dtype\x26\x26\x22string\x22!\x3d\x3dtypeof type){var propTypes;if(\x22function\x22\x3d\x3d\x3dtypeof type||\x22object\x22\x3d\x3d\x3dtypeof type\x26\x26(type.$$typeof\x3d\x3d\x3dREACT_FORWARD_REF_TYPE||type.$$typeof\x3d\x3d\x3dREACT_MEMO_TYPE)){if(propTypes\x3dtype.propTypes){var name\x3d\ngetComponentName(type),values\x3delement.props,has\x3dFunction.call.bind(Object.prototype.hasOwnProperty),typeSpecName;for(typeSpecName in propTypes)if(has(propTypes,typeSpecName)){var error$1\x3dvoid 0;try{if(\x22function\x22!\x3d\x3dtypeof propTypes[typeSpecName]){var err\x3dError((name||\x22React class\x22)+\x22: prop type `\x22+typeSpecName+\x22` is invalid; it must be a function, usually from the `prop-types` package, but received `\x22+typeof propTypes[typeSpecName]+\x22`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\x22);\nerr.name\x3d\x22Invariant Violation\x22;throw err;}error$1\x3dpropTypes[typeSpecName](values,typeSpecName,name,\x22prop\x22,null,\x22SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\x22)}catch(ex){error$1\x3dex}!error$1||error$1 instanceof Error||(setCurrentlyValidatingElement(element),error$jscomp$0(\x22%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\x22,\nname||\x22React class\x22,\x22prop\x22,typeSpecName,typeof error$1),setCurrentlyValidatingElement(null));error$1 instanceof Error\x26\x26!(error$1.message in loggedTypeFailures)\x26\x26(loggedTypeFailures[error$1.message]\x3d!0,setCurrentlyValidatingElement(element),error$jscomp$0(\x22Failed %s type: %s\x22,\x22prop\x22,error$1.message),setCurrentlyValidatingElement(null))}}else void 0\x3d\x3d\x3dtype.PropTypes||propTypesMisspellWarningShown||(propTypesMisspellWarningShown\x3d!0,element\x3dgetComponentName(type),error$jscomp$0(\x22Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\x22,\nelement||\x22Unknown\x22));\x22function\x22!\x3d\x3dtypeof type.getDefaultProps||type.getDefaultProps.isReactClassApproved||error$jscomp$0(\x22getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\x22)}}}function createElementWithValidation(type,props,children){var validType\x3disValidElementType(type);if(!validType){var info\x3d\x22\x22;if(void 0\x3d\x3d\x3dtype||\x22object\x22\x3d\x3d\x3dtypeof type\x26\x26null!\x3d\x3dtype\x26\x260\x3d\x3d\x3dObject.keys(type).length)info+\x3d\x22 You likely forgot to export your component from the file it\x27s defined in, or you might have mixed up default and named imports.\x22;\nif(null!\x3d\x3dprops\x26\x26void 0!\x3d\x3dprops){var sourceInfo\x3dprops.__source;sourceInfo\x3dvoid 0!\x3d\x3dsourceInfo?\x22\\n\\nCheck your code at \x22+sourceInfo.fileName.replace(/^.*[\\\\\\/]/,\x22\x22)+\x22:\x22+sourceInfo.lineNumber+\x22.\x22:\x22\x22}else sourceInfo\x3d\x22\x22;info\x3dsourceInfo?info+sourceInfo:info+getDeclarationErrorAddendum();null\x3d\x3d\x3dtype?sourceInfo\x3d\x22null\x22:Array.isArray(type)?sourceInfo\x3d\x22array\x22:void 0!\x3d\x3dtype\x26\x26type.$$typeof\x3d\x3d\x3dREACT_ELEMENT_TYPE?(sourceInfo\x3d\x22\\x3c\x22+(getComponentName(type.type)||\x22Unknown\x22)+\x22 /\\x3e\x22,info\x3d\x22 Did you accidentally export a JSX literal instead of a component?\x22):\nsourceInfo\x3dtypeof type;error$jscomp$0(\x22React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\x22,sourceInfo,info)}info\x3dcreateElement.apply(this,arguments);if(null\x3d\x3dinfo)return info;if(validType)for(validType\x3d2;validType\x3carguments.length;validType++)validateChildKeys(arguments[validType],type);if(type\x3d\x3d\x3dexports.Fragment){validType\x3dObject.keys(info.props);for(sourceInfo\x3d0;sourceInfo\x3cvalidType.length;sourceInfo++){var key\x3d\nvalidType[sourceInfo];if(\x22children\x22!\x3d\x3dkey\x26\x26\x22key\x22!\x3d\x3dkey){setCurrentlyValidatingElement$1(info);error$jscomp$0(\x22Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\x22,key);setCurrentlyValidatingElement$1(null);break}}null!\x3d\x3dinfo.ref\x26\x26(setCurrentlyValidatingElement$1(info),error$jscomp$0(\x22Invalid attribute `ref` supplied to `React.Fragment`.\x22),setCurrentlyValidatingElement$1(null))}else validatePropTypes(info);return info}var _assign\x3drequire(\x22module$node_modules$object_assign$index\x22),\nREACT_ELEMENT_TYPE\x3d60103,REACT_PORTAL_TYPE\x3d60106;exports.Fragment\x3d60107;exports.StrictMode\x3d60108;exports.Profiler\x3d60114;var REACT_PROVIDER_TYPE\x3d60109,REACT_CONTEXT_TYPE\x3d60110,REACT_FORWARD_REF_TYPE\x3d60112;exports.Suspense\x3d60113;var REACT_SUSPENSE_LIST_TYPE\x3d60120,REACT_MEMO_TYPE\x3d60115,REACT_LAZY_TYPE\x3d60116,REACT_BLOCK_TYPE\x3d60121,REACT_SERVER_BLOCK_TYPE\x3d60122,REACT_FUNDAMENTAL_TYPE\x3d60117,REACT_DEBUG_TRACING_MODE_TYPE\x3d60129,REACT_LEGACY_HIDDEN_TYPE\x3d60131;if(\x22function\x22\x3d\x3d\x3dtypeof Symbol\x26\x26Symbol.for){var symbolFor\x3d\nSymbol.for;REACT_ELEMENT_TYPE\x3dsymbolFor(\x22react.element\x22);REACT_PORTAL_TYPE\x3dsymbolFor(\x22react.portal\x22);exports.Fragment\x3dsymbolFor(\x22react.fragment\x22);exports.StrictMode\x3dsymbolFor(\x22react.strict_mode\x22);exports.Profiler\x3dsymbolFor(\x22react.profiler\x22);REACT_PROVIDER_TYPE\x3dsymbolFor(\x22react.provider\x22);REACT_CONTEXT_TYPE\x3dsymbolFor(\x22react.context\x22);REACT_FORWARD_REF_TYPE\x3dsymbolFor(\x22react.forward_ref\x22);exports.Suspense\x3dsymbolFor(\x22react.suspense\x22);REACT_SUSPENSE_LIST_TYPE\x3dsymbolFor(\x22react.suspense_list\x22);REACT_MEMO_TYPE\x3d\nsymbolFor(\x22react.memo\x22);REACT_LAZY_TYPE\x3dsymbolFor(\x22react.lazy\x22);REACT_BLOCK_TYPE\x3dsymbolFor(\x22react.block\x22);REACT_SERVER_BLOCK_TYPE\x3dsymbolFor(\x22react.server.block\x22);REACT_FUNDAMENTAL_TYPE\x3dsymbolFor(\x22react.fundamental\x22);symbolFor(\x22react.scope\x22);symbolFor(\x22react.opaque.id\x22);REACT_DEBUG_TRACING_MODE_TYPE\x3dsymbolFor(\x22react.debug_trace_mode\x22);symbolFor(\x22react.offscreen\x22);REACT_LEGACY_HIDDEN_TYPE\x3dsymbolFor(\x22react.legacy_hidden\x22)}var MAYBE_ITERATOR_SYMBOL\x3d\x22function\x22\x3d\x3d\x3dtypeof Symbol\x26\x26Symbol.iterator,ReactCurrentDispatcher\x3d\n{current:null},ReactCurrentOwner\x3d{current:null},ReactDebugCurrentFrame\x3d{},currentExtraStackFrame\x3dnull;ReactDebugCurrentFrame.setExtraStackFrame\x3dfunction(stack){currentExtraStackFrame\x3dstack};ReactDebugCurrentFrame.getCurrentStack\x3dnull;ReactDebugCurrentFrame.getStackAddendum\x3dfunction(){var stack\x3d\x22\x22;currentExtraStackFrame\x26\x26(stack+\x3dcurrentExtraStackFrame);var impl\x3dReactDebugCurrentFrame.getCurrentStack;impl\x26\x26(stack+\x3dimpl()||\x22\x22);return stack};var ReactSharedInternals\x3d{ReactCurrentDispatcher,ReactCurrentBatchConfig:{transition:0},\nReactCurrentOwner,IsSomeRendererActing:{current:!1},assign:_assign};ReactSharedInternals.ReactDebugCurrentFrame\x3dReactDebugCurrentFrame;var didWarnStateUpdateForUnmountedComponent\x3d{},ReactNoopUpdateQueue\x3d{isMounted:function(publicInstance){return!1},enqueueForceUpdate:function(publicInstance,callback,callerName){warnNoop(publicInstance,\x22forceUpdate\x22)},enqueueReplaceState:function(publicInstance,completeState,callback,callerName){warnNoop(publicInstance,\x22replaceState\x22)},enqueueSetState:function(publicInstance,\npartialState,callback,callerName){warnNoop(publicInstance,\x22setState\x22)}},emptyObject\x3d{};Object.freeze(emptyObject);Component.prototype.isReactComponent\x3d{};Component.prototype.setState\x3dfunction(partialState,callback){if(\x22object\x22!\x3d\x3dtypeof partialState\x26\x26\x22function\x22!\x3d\x3dtypeof partialState\x26\x26null!\x3dpartialState)throw Error(\x22setState(...): takes an object of state variables to update or a function which returns an object of state variables.\x22);this.updater.enqueueSetState(this,partialState,callback,\x22setState\x22)};\nComponent.prototype.forceUpdate\x3dfunction(callback){this.updater.enqueueForceUpdate(this,callback,\x22forceUpdate\x22)};symbolFor\x3d{isMounted:[\x22isMounted\x22,\x22Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\x22],replaceState:[\x22replaceState\x22,\x22Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).\x22]};var defineDeprecationWarning\x3dfunction(methodName,info){Object.defineProperty(Component.prototype,methodName,\n{get:function(){warn(\x22%s(...) is deprecated in plain JavaScript React classes. %s\x22,info[0],info[1])}})};for(fnName in symbolFor)symbolFor.hasOwnProperty(fnName)\x26\x26defineDeprecationWarning(fnName,symbolFor[fnName]);ComponentDummy.prototype\x3dComponent.prototype;var fnName\x3dPureComponent.prototype\x3dnew ComponentDummy;fnName.constructor\x3dPureComponent;_assign(fnName,Component.prototype);fnName.isPureReactComponent\x3d!0;var hasOwnProperty\x3dObject.prototype.hasOwnProperty,RESERVED_PROPS\x3d{key:!0,ref:!0,__self:!0,\n__source:!0},specialPropKeyWarningShown,specialPropRefWarningShown;var didWarnAboutStringRefs\x3d{};var ReactElement\x3dfunction(type,key,ref,self,source,owner,props){type\x3d{$$typeof:REACT_ELEMENT_TYPE,type,key,ref,props,_owner:owner,_store:{}};Object.defineProperty(type._store,\x22validated\x22,{configurable:!1,enumerable:!1,writable:!0,value:!1});Object.defineProperty(type,\x22_self\x22,{configurable:!1,enumerable:!1,writable:!1,value:self});Object.defineProperty(type,\x22_source\x22,{configurable:!1,enumerable:!1,writable:!1,\nvalue:source});Object.freeze\x26\x26(Object.freeze(type.props),Object.freeze(type));return type},didWarnAboutMaps\x3d!1,userProvidedKeyEscapeRegex\x3d/\\/+/g,disabledDepth\x3d0,prevLog,prevInfo,prevWarn,prevError,prevGroup,prevGroupCollapsed,prevGroupEnd;disabledLog.__reactDisabledLog\x3d!0;var ReactCurrentDispatcher$1\x3dReactSharedInternals.ReactCurrentDispatcher,prefix,reentry\x3d!1;var componentFrameCache\x3dnew (\x22function\x22\x3d\x3d\x3dtypeof WeakMap?WeakMap:Map);var loggedTypeFailures\x3d{},ReactDebugCurrentFrame$1\x3dReactSharedInternals.ReactDebugCurrentFrame;\nvar propTypesMisspellWarningShown\x3d!1;var ownerHasKeyUseWarning\x3d{},didWarnAboutDeprecatedCreateFactory\x3d!1;try{var frozenObject\x3dObject.freeze({});new Map([[frozenObject,null]]);new Set([frozenObject])}catch(e){}exports.Children\x3d{map:mapChildren,forEach:function(children,forEachFunc,forEachContext){mapChildren(children,function(){forEachFunc.apply(this,arguments)},forEachContext)},count:function(children){var n\x3d0;mapChildren(children,function(){n++});return n},toArray:function(children){return mapChildren(children,\nfunction(child){return child})||[]},only:function(children){if(!isValidElement(children))throw Error(\x22React.Children.only expected to receive a single React element child.\x22);return children}};exports.Component\x3dComponent;exports.PureComponent\x3dPureComponent;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\x3dReactSharedInternals;exports.cloneElement\x3dfunction(element,props,children){for(var newElement\x3dcloneElement.apply(this,arguments),i\x3d2;i\x3carguments.length;i++)validateChildKeys(arguments[i],\nnewElement.type);validatePropTypes(newElement);return newElement};exports.createContext\x3dfunction(defaultValue,calculateChangedBits){void 0\x3d\x3d\x3dcalculateChangedBits?calculateChangedBits\x3dnull:null!\x3d\x3dcalculateChangedBits\x26\x26\x22function\x22!\x3d\x3dtypeof calculateChangedBits\x26\x26error$jscomp$0(\x22createContext: Expected the optional second argument to be a function. Instead received: %s\x22,calculateChangedBits);var context\x3d{$$typeof:REACT_CONTEXT_TYPE,_calculateChangedBits:calculateChangedBits,_currentValue:defaultValue,\n_currentValue2:defaultValue,_threadCount:0,Provider:null,Consumer:null};context.Provider\x3d{$$typeof:REACT_PROVIDER_TYPE,_context:context};var hasWarnedAboutUsingNestedContextConsumers\x3d!1,hasWarnedAboutUsingConsumerProvider\x3d!1,hasWarnedAboutDisplayNameOnConsumer\x3d!1;defaultValue\x3d{$$typeof:REACT_CONTEXT_TYPE,_context:context,_calculateChangedBits:context._calculateChangedBits};Object.defineProperties(defaultValue,{Provider:{get:function(){hasWarnedAboutUsingConsumerProvider||(hasWarnedAboutUsingConsumerProvider\x3d\n!0,error$jscomp$0(\x22Rendering \\x3cContext.Consumer.Provider\\x3e is not supported and will be removed in a future major release. Did you mean to render \\x3cContext.Provider\\x3e instead?\x22));return context.Provider},set:function(_Provider){context.Provider\x3d_Provider}},_currentValue:{get:function(){return context._currentValue},set:function(_currentValue){context._currentValue\x3d_currentValue}},_currentValue2:{get:function(){return context._currentValue2},set:function(_currentValue2){context._currentValue2\x3d\n_currentValue2}},_threadCount:{get:function(){return context._threadCount},set:function(_threadCount){context._threadCount\x3d_threadCount}},Consumer:{get:function(){hasWarnedAboutUsingNestedContextConsumers||(hasWarnedAboutUsingNestedContextConsumers\x3d!0,error$jscomp$0(\x22Rendering \\x3cContext.Consumer.Consumer\\x3e is not supported and will be removed in a future major release. Did you mean to render \\x3cContext.Consumer\\x3e instead?\x22));return context.Consumer}},displayName:{get:function(){return context.displayName},\nset:function(displayName){hasWarnedAboutDisplayNameOnConsumer||(warn(\x22Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName \\x3d \x27%s\x27.\x22,displayName),hasWarnedAboutDisplayNameOnConsumer\x3d!0)}}});context.Consumer\x3ddefaultValue;context._currentRenderer\x3dnull;context._currentRenderer2\x3dnull;return context};exports.createElement\x3dcreateElementWithValidation;exports.createFactory\x3dfunction(type){var validatedFactory\x3dcreateElementWithValidation.bind(null,\ntype);validatedFactory.type\x3dtype;didWarnAboutDeprecatedCreateFactory||(didWarnAboutDeprecatedCreateFactory\x3d!0,warn(\x22React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.\x22));Object.defineProperty(validatedFactory,\x22type\x22,{enumerable:!1,get:function(){warn(\x22Factory.type is deprecated. Access the class directly before passing it to createFactory.\x22);Object.defineProperty(this,\x22type\x22,{value:type});return type}});\nreturn validatedFactory};exports.createRef\x3dfunction(){var refObject\x3d{current:null};Object.seal(refObject);return refObject};exports.forwardRef\x3dfunction(render){null!\x3drender\x26\x26render.$$typeof\x3d\x3d\x3dREACT_MEMO_TYPE?error$jscomp$0(\x22forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).\x22):\x22function\x22!\x3d\x3dtypeof render?error$jscomp$0(\x22forwardRef requires a render function but was given %s.\x22,null\x3d\x3d\x3drender?\x22null\x22:typeof render):0!\x3d\x3drender.length\x26\x26\n2!\x3d\x3drender.length\x26\x26error$jscomp$0(\x22forwardRef render functions accept exactly two parameters: props and ref. %s\x22,1\x3d\x3d\x3drender.length?\x22Did you forget to use the ref parameter?\x22:\x22Any additional parameter will be undefined.\x22);null\x3d\x3drender||null\x3d\x3drender.defaultProps\x26\x26null\x3d\x3drender.propTypes||error$jscomp$0(\x22forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\x22);var elementType\x3d{$$typeof:REACT_FORWARD_REF_TYPE,render},ownName;Object.defineProperty(elementType,\n\x22displayName\x22,{enumerable:!1,configurable:!0,get:function(){return ownName},set:function(name){ownName\x3dname;null\x3d\x3drender.displayName\x26\x26(render.displayName\x3dname)}});return elementType};exports.isValidElement\x3disValidElement;exports.lazy\x3dfunction(ctor){var lazyType\x3d{$$typeof:REACT_LAZY_TYPE,_payload:{_status:-1,_result:ctor},_init:lazyInitializer},defaultProps,propTypes;Object.defineProperties(lazyType,{defaultProps:{configurable:!0,get:function(){return defaultProps},set:function(newDefaultProps){error$jscomp$0(\x22React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.\x22);\ndefaultProps\x3dnewDefaultProps;Object.defineProperty(lazyType,\x22defaultProps\x22,{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return propTypes},set:function(newPropTypes){error$jscomp$0(\x22React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.\x22);propTypes\x3dnewPropTypes;Object.defineProperty(lazyType,\x22propTypes\x22,{enumerable:!0})}}});return lazyType};exports.memo\x3dfunction(type,\ncompare){isValidElementType(type)||error$jscomp$0(\x22memo: The first argument must be a component. Instead received: %s\x22,null\x3d\x3d\x3dtype?\x22null\x22:typeof type);compare\x3d{$$typeof:REACT_MEMO_TYPE,type,compare:void 0\x3d\x3d\x3dcompare?null:compare};var ownName;Object.defineProperty(compare,\x22displayName\x22,{enumerable:!1,configurable:!0,get:function(){return ownName},set:function(name){ownName\x3dname;null\x3d\x3dtype.displayName\x26\x26(type.displayName\x3dname)}});return compare};exports.useCallback\x3dfunction(callback,deps){return resolveDispatcher().useCallback(callback,\ndeps)};exports.useContext\x3dfunction(Context,unstable_observedBits,JSCompiler_OptimizeArgumentsArray_p0){var dispatcher\x3dresolveDispatcher();void 0!\x3d\x3dunstable_observedBits\x26\x26error$jscomp$0(\x22useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s\x22,unstable_observedBits,\x22number\x22\x3d\x3d\x3dtypeof unstable_observedBits\x26\x26Array.isArray(JSCompiler_OptimizeArgumentsArray_p0)?\x22\\n\\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks\x22:\n\x22\x22);void 0!\x3d\x3dContext._context\x26\x26(JSCompiler_OptimizeArgumentsArray_p0\x3dContext._context,JSCompiler_OptimizeArgumentsArray_p0.Consumer\x3d\x3d\x3dContext?error$jscomp$0(\x22Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?\x22):JSCompiler_OptimizeArgumentsArray_p0.Provider\x3d\x3d\x3dContext\x26\x26error$jscomp$0(\x22Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?\x22));\nreturn dispatcher.useContext(Context,unstable_observedBits)};exports.useDebugValue\x3dfunction(value,formatterFn){return resolveDispatcher().useDebugValue(value,formatterFn)};exports.useEffect\x3dfunction(create,deps){return resolveDispatcher().useEffect(create,deps)};exports.useImperativeHandle\x3dfunction(ref,create,deps){return resolveDispatcher().useImperativeHandle(ref,create,deps)};exports.useLayoutEffect\x3dfunction(create,deps){return resolveDispatcher().useLayoutEffect(create,deps)};exports.useMemo\x3d\nfunction(create,deps){return resolveDispatcher().useMemo(create,deps)};exports.useReducer\x3dfunction(reducer,initialArg,init){return resolveDispatcher().useReducer(reducer,initialArg,init)};exports.useRef\x3dfunction(initialValue){return resolveDispatcher().useRef(initialValue)};exports.useState\x3dfunction(initialState){return resolveDispatcher().useState(initialState)};exports.version\x3d\x2217.0.2\x22})()}");
SHADOW_ENV.evalLoad("module$node_modules$react$index.js", true , "shadow$provide.module$node_modules$react$index\x3dfunction(global,require,module,exports){module.exports\x3drequire(\x22module$node_modules$react$cjs$react_development\x22)}");
SHADOW_ENV.evalLoad("reagent.debug.js", true , "goog.provide(\x27reagent.debug\x27);\nreagent.debug.has_console \x3d (typeof console !\x3d\x3d \x27undefined\x27);\nreagent.debug.tracking \x3d false;\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug.warnings !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.debug.warnings \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug.track_console !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.debug.track_console \x3d (function (){var o \x3d ({});\n(o.warn \x3d (function() { \nvar G__64598__delegate \x3d function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__64598 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__64613__i \x3d 0, G__64613__a \x3d new Array(arguments.length -  0);\nwhile (G__64613__i \x3c G__64613__a.length) {G__64613__a[G__64613__i] \x3d arguments[G__64613__i + 0]; ++G__64613__i;}\n  args \x3d new cljs.core.IndexedSeq(G__64613__a,0,null);\n} \nreturn G__64598__delegate.call(this,args);};\nG__64598.cljs$lang$maxFixedArity \x3d 0;\nG__64598.cljs$lang$applyTo \x3d (function (arglist__64614){\nvar args \x3d cljs.core.seq(arglist__64614);\nreturn G__64598__delegate(args);\n});\nG__64598.cljs$core$IFn$_invoke$arity$variadic \x3d G__64598__delegate;\nreturn G__64598;\n})()\n);\n\n(o.error \x3d (function() { \nvar G__64617__delegate \x3d function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__64617 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__64618__i \x3d 0, G__64618__a \x3d new Array(arguments.length -  0);\nwhile (G__64618__i \x3c G__64618__a.length) {G__64618__a[G__64618__i] \x3d arguments[G__64618__i + 0]; ++G__64618__i;}\n  args \x3d new cljs.core.IndexedSeq(G__64618__a,0,null);\n} \nreturn G__64617__delegate.call(this,args);};\nG__64617.cljs$lang$maxFixedArity \x3d 0;\nG__64617.cljs$lang$applyTo \x3d (function (arglist__64619){\nvar args \x3d cljs.core.seq(arglist__64619);\nreturn G__64617__delegate(args);\n});\nG__64617.cljs$core$IFn$_invoke$arity$variadic \x3d G__64617__delegate;\nreturn G__64617;\n})()\n);\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings \x3d (function reagent$debug$track_warnings(f){\n(reagent.debug.tracking \x3d true);\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns \x3d cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(reagent.debug.tracking \x3d false);\n\nreturn warns;\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.util.js", true , "goog.provide(\x27reagent.impl.util\x27);\nreagent.impl.util.is_client \x3d (((typeof window !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((window.document \x3d\x3d null)))));\nreagent.impl.util._STAR_non_reactive_STAR_ \x3d false;\nreagent.impl.util.memoize_1 \x3d (function reagent$impl$util$memoize_1(f){\nvar mem \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nreturn (function (arg){\nvar v \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mem),arg);\nif((!((v \x3d\x3d null)))){\nreturn v;\n} else {\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg) : f.call(null,arg));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,arg,ret);\n\nreturn ret;\n}\n});\n});\nreagent.impl.util.dont_camel_case \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\x22aria\x22,null,\x22data\x22,null], null), null);\nreagent.impl.util.capitalize \x3d (function reagent$impl$util$capitalize(s){\nif((cljs.core.count(s) \x3c (2))){\nreturn clojure.string.upper_case(s);\n} else {\nreturn [clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(1))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1))].join(\x27\x27);\n}\n});\nreagent.impl.util.dash_to_prop_name \x3d (function reagent$impl$util$dash_to_prop_name(dashed){\nif(typeof dashed \x3d\x3d\x3d \x27string\x27){\nreturn dashed;\n} else {\nvar name_str \x3d cljs.core.name(dashed);\nvar vec__64717 \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(name_str,/-/);\nvar seq__64718 \x3d cljs.core.seq(vec__64717);\nvar first__64719 \x3d cljs.core.first(seq__64718);\nvar seq__64718__$1 \x3d cljs.core.next(seq__64718);\nvar start \x3d first__64719;\nvar parts \x3d seq__64718__$1;\nif(cljs.core.truth_((reagent.impl.util.dont_camel_case.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.util.dont_camel_case.cljs$core$IFn$_invoke$arity$1(start) : reagent.impl.util.dont_camel_case.call(null,start)))){\nreturn name_str;\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,start,cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.util.capitalize,parts));\n}\n}\n});\nreagent.impl.util.dash_to_method_name \x3d (function reagent$impl$util$dash_to_method_name(dashed){\nif(typeof dashed \x3d\x3d\x3d \x27string\x27){\nreturn dashed;\n} else {\nvar name_str \x3d cljs.core.name(dashed);\nvar name_str__$1 \x3d clojure.string.replace(name_str,/(unsafe|UNSAFE)[-_]/,\x22UNSAFE_\x22);\nvar vec__64747 \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(name_str__$1,/-/);\nvar seq__64748 \x3d cljs.core.seq(vec__64747);\nvar first__64749 \x3d cljs.core.first(seq__64748);\nvar seq__64748__$1 \x3d cljs.core.next(seq__64748);\nvar start \x3d first__64749;\nvar parts \x3d seq__64748__$1;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,start,cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.util.capitalize,parts));\n}\n});\nreagent.impl.util.fun_name \x3d (function reagent$impl$util$fun_name(f){\nvar n \x3d (function (){var or__4223__auto__ \x3d (function (){var and__4221__auto__ \x3d cljs.core.fn_QMARK_(f);\nif(and__4221__auto__){\nvar or__4223__auto__ \x3d f.displayName;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar n \x3d f.name;\nif(((typeof n \x3d\x3d\x3d \x27string\x27) \x26\x26 (cljs.core.seq(n)))){\nreturn n;\n} else {\nreturn null;\n}\n}\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 \x3d (function (){var and__4221__auto__ \x3d (((!((f \x3d\x3d null))))?(((((f.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$INamed$))))?true:false):false);\nif(and__4221__auto__){\nreturn cljs.core.name(f);\n} else {\nreturn and__4221__auto__;\n}\n})();\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nvar m \x3d cljs.core.meta(f);\nif(cljs.core.map_QMARK_(m)){\nreturn new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177).cljs$core$IFn$_invoke$arity$1(m);\n} else {\nreturn null;\n}\n}\n}\n})();\nif(cljs.core.truth_(n)){\nreturn clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22$\x22,\x22.\x22);\n} else {\nreturn null;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.Fn}\n*/\nreagent.impl.util.PartialFn \x3d (function (pfn,f,args){\nthis.pfn \x3d pfn;\nthis.f \x3d f;\nthis.args \x3d args;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6291457;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.impl.util.PartialFn.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.impl.util.PartialFn.prototype.call \x3d (function (unused__23111__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__64789 \x3d (arguments.length - (1));\nswitch (G__64789) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (3):\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (4):\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase (5):\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase (6):\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase (7):\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase (8):\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase (9):\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase (10):\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase (11):\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase (12):\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase (13):\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase (14):\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase (15):\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase (16):\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase (17):\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase (18):\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase (19):\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase (20):\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase (21):\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(reagent.impl.util.PartialFn.prototype.apply \x3d (function (self__,args64785){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args64785)));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$0 ? self__.pfn.cljs$core$IFn$_invoke$arity$0() : self__.pfn.call(null));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$1 ? self__.pfn.cljs$core$IFn$_invoke$arity$1(a) : self__.pfn.call(null,a));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$2 ? self__.pfn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.pfn.call(null,a,b));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$3 ? self__.pfn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.pfn.call(null,a,b,c));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$4 ? self__.pfn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.pfn.call(null,a,b,c,d));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$5 ? self__.pfn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.pfn.call(null,a,b,c,d,e));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f__$1){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$6 ? self__.pfn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f__$1) : self__.pfn.call(null,a,b,c,d,e,f__$1));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f__$1,g){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$7 ? self__.pfn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f__$1,g) : self__.pfn.call(null,a,b,c,d,e,f__$1,g));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f__$1,g,h){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$8 ? self__.pfn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f__$1,g,h) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f__$1,g,h,i){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$9 ? self__.pfn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f__$1,g,h,i) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$10 ? self__.pfn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f__$1,g,h,i,j) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$11 ? self__.pfn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f__$1,g,h,i,j,k) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$12 ? self__.pfn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f__$1,g,h,i,j,k,l) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$13 ? self__.pfn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f__$1,g,h,i,j,k,l,m) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$14 ? self__.pfn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$15 ? self__.pfn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$16 ? self__.pfn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$17 ? self__.pfn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$18 ? self__.pfn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$19 ? self__.pfn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$20 ? self__.pfn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.pfn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.impl.util.PartialFn)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.impl.util.PartialFn.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22pfn\x22,\x22pfn\x22,-513383568,null),new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22args\x22,\x22args\x22,-1338879193,null)], null);\n}));\n\n(reagent.impl.util.PartialFn.cljs$lang$type \x3d true);\n\n(reagent.impl.util.PartialFn.cljs$lang$ctorStr \x3d \x22reagent.impl.util/PartialFn\x22);\n\n(reagent.impl.util.PartialFn.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.impl.util/PartialFn\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.util/PartialFn.\n */\nreagent.impl.util.__GT_PartialFn \x3d (function reagent$impl$util$__GT_PartialFn(pfn,f,args){\nreturn (new reagent.impl.util.PartialFn(pfn,f,args));\n});\n\nreagent.impl.util.make_partial_fn \x3d (function reagent$impl$util$make_partial_fn(f,args){\nreturn reagent.impl.util.__GT_PartialFn(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.partial,f,args),f,args);\n});\nreagent.impl.util.named_QMARK_ \x3d (function reagent$impl$util$named_QMARK_(x){\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\n});\nreagent.impl.util.class_names \x3d (function reagent$impl$util$class_names(var_args){\nvar G__64901 \x3d arguments.length;\nswitch (G__64901) {\ncase 0:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___65135 \x3d arguments.length;\nvar i__4830__auto___65136 \x3d (0);\nwhile(true){\nif((i__4830__auto___65136 \x3c len__4829__auto___65135)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___65136]));\n\nvar G__65137 \x3d (i__4830__auto___65136 + (1));\ni__4830__auto___65136 \x3d G__65137;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((2)),(0),null));\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1 \x3d (function (class$){\nif(cljs.core.coll_QMARK_(class$)){\nvar classes \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (c){\nif(cljs.core.truth_(c)){\nif(reagent.impl.util.named_QMARK_(c)){\nreturn cljs.core.name(c);\n} else {\nreturn c;\n}\n} else {\nreturn null;\n}\n}),class$);\nif(cljs.core.seq(classes)){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22 \x22,classes);\n} else {\nreturn null;\n}\n} else {\nif(reagent.impl.util.named_QMARK_(class$)){\nreturn cljs.core.name(class$);\n} else {\nreturn class$;\n}\n}\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nif(cljs.core.truth_(a)){\nif(cljs.core.truth_(b)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(a)),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(b))].join(\x27\x27);\n} else {\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(a);\n}\n} else {\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(b);\n}\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,b,rst){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(reagent.impl.util.class_names,reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(a,b),rst);\n}));\n\n/** @this {Function} */\n(reagent.impl.util.class_names.cljs$lang$applyTo \x3d (function (seq64898){\nvar G__64899 \x3d cljs.core.first(seq64898);\nvar seq64898__$1 \x3d cljs.core.next(seq64898);\nvar G__64900 \x3d cljs.core.first(seq64898__$1);\nvar seq64898__$2 \x3d cljs.core.next(seq64898__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__64899,G__64900,seq64898__$2);\n}));\n\n(reagent.impl.util.class_names.cljs$lang$maxFixedArity \x3d (2));\n\nreagent.impl.util.merge_class \x3d (function reagent$impl$util$merge_class(p1,p2){\nif(((cljs.core.contains_QMARK_(p1,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996))) || (cljs.core.contains_QMARK_(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p1),new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p2)));\n} else {\nreturn p2;\n}\n});\nreagent.impl.util.merge_style \x3d (function reagent$impl$util$merge_style(p1,p2){\nvar style \x3d (function (){var temp__5753__auto__ \x3d new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736).cljs$core$IFn$_invoke$arity$1(p1);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s1 \x3d temp__5753__auto__;\nvar temp__5753__auto____$1 \x3d new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736).cljs$core$IFn$_invoke$arity$1(p2);\nif(cljs.core.truth_(temp__5753__auto____$1)){\nvar s2 \x3d temp__5753__auto____$1;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s1,s2], 0));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\nif((style \x3d\x3d null)){\nreturn p2;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),style);\n}\n});\nreagent.impl.util.merge_props \x3d (function reagent$impl$util$merge_props(var_args){\nvar G__64941 \x3d arguments.length;\nswitch (G__64941) {\ncase 0:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___65147 \x3d arguments.length;\nvar i__4830__auto___65148 \x3d (0);\nwhile(true){\nif((i__4830__auto___65148 \x3c len__4829__auto___65147)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___65148]));\n\nvar G__65150 \x3d (i__4830__auto___65148 + (1));\ni__4830__auto___65148 \x3d G__65150;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((2)),(0),null));\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\nvar temp__5751__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar c \x3d temp__5751__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(c));\n} else {\nreturn p;\n}\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\nif((p1 \x3d\x3d null)){\nvar temp__5751__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p2);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar c \x3d temp__5751__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(c));\n} else {\nreturn p2;\n}\n} else {\nif(cljs.core.map_QMARK_(p1)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Property must be a map, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1], 0))].join(\x27\x27),\x22\\n\x22,\x22(map? p1)\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1,reagent.impl.util.merge_style(p1,reagent.impl.util.merge_class(p1,p2))], 0));\n}\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,ps){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(reagent.impl.util.merge_props,reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2(p1,p2),ps);\n}));\n\n/** @this {Function} */\n(reagent.impl.util.merge_props.cljs$lang$applyTo \x3d (function (seq64937){\nvar G__64938 \x3d cljs.core.first(seq64937);\nvar seq64937__$1 \x3d cljs.core.next(seq64937);\nvar G__64939 \x3d cljs.core.first(seq64937__$1);\nvar seq64937__$2 \x3d cljs.core.next(seq64937__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__64938,G__64939,seq64937__$2);\n}));\n\n(reagent.impl.util.merge_props.cljs$lang$maxFixedArity \x3d (2));\n\nreagent.impl.util._STAR_always_update_STAR_ \x3d false;\nreagent.impl.util.force_update \x3d (function reagent$impl$util$force_update(comp,deep){\nif(cljs.core.truth_(deep)){\nvar _STAR_always_update_STAR__orig_val__64968 \x3d reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__64969 \x3d true;\n(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__temp_val__64969);\n\ntry{return comp.forceUpdate();\n}finally {(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__orig_val__64968);\n}} else {\nreturn comp.forceUpdate();\n}\n});\nreagent.impl.util.shallow_obj_to_map \x3d (function reagent$impl$util$shallow_obj_to_map(o){\nvar ks \x3d cljs.core.js_keys(o);\nvar len \x3d ks.length;\nvar m \x3d cljs.core.PersistentArrayMap.EMPTY;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar k \x3d (ks[i]);\nvar G__65162 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),goog.object.get(o,k));\nvar G__65163 \x3d (i + (1));\nm \x3d G__65162;\ni \x3d G__65163;\ncontinue;\n} else {\nreturn m;\n}\nbreak;\n}\n});\nreagent.impl.util.js_val_QMARK_ \x3d (function reagent$impl$util$js_val_QMARK_(x){\nreturn (!((\x22object\x22 \x3d\x3d\x3d goog.typeOf(x))));\n});\nreagent.impl.util.try_get_react_key \x3d (function reagent$impl$util$try_get_react_key(x){\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587));\n}catch (e64988){var e \x3d e64988;\nreturn null;\n}});\nreagent.impl.util.get_react_key \x3d (function reagent$impl$util$get_react_key(x){\nif(cljs.core.map_QMARK_(x)){\nreturn reagent.impl.util.try_get_react_key(x);\n} else {\nreturn null;\n}\n});\nreagent.impl.util.react_key_from_vec \x3d (function reagent$impl$util$react_key_from_vec(v){\nvar or__4223__auto__ \x3d new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 \x3d reagent.impl.util.get_react_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nvar G__64998 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nvar G__64998__$1 \x3d (((G__64998 instanceof cljs.core.Keyword))?G__64998.fqn:null);\nswitch (G__64998__$1) {\ncase \x22\x3e\x22:\ncase \x22f\x3e\x22:\nreturn reagent.impl.util.get_react_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(2),null));\n\nbreak;\ncase \x22r\x3e\x22:\nvar G__65001 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(2),null);\nif((G__65001 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__65001.key;\n}\n\nbreak;\ndefault:\nreturn null;\n\n}\n}\n}\n});\nreagent.impl.util.str_coll \x3d (function reagent$impl$util$str_coll(coll){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.walk.prewalk((function (x){\nif(cljs.core.fn_QMARK_(x)){\nvar n \x3d reagent.impl.util.fun_name(x);\nvar G__65011 \x3d n;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x22,G__65011)){\nreturn x;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__65011)){\nreturn x;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\n\n}\n}\n} else {\nreturn x;\n}\n}),coll));\n\n});\nreagent.impl.util.hiccup_err \x3d (function reagent$impl$util$hiccup_err(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___65172 \x3d arguments.length;\nvar i__4830__auto___65173 \x3d (0);\nwhile(true){\nif((i__4830__auto___65173 \x3c len__4829__auto___65172)){\nargs__4835__auto__.push((arguments[i__4830__auto___65173]));\n\nvar G__65180 \x3d (i__4830__auto___65173 + (1));\ni__4830__auto___65173 \x3d G__65180;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((2) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((2)),(0),null)):null);\nreturn reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4836__auto__);\n});\n\n(reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic \x3d (function (v,comp_name,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\x22: \x22,reagent.impl.util.str_coll(v),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(comp_name)].join(\x27\x27);\n}));\n\n(reagent.impl.util.hiccup_err.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.impl.util.hiccup_err.cljs$lang$applyTo \x3d (function (seq65019){\nvar G__65020 \x3d cljs.core.first(seq65019);\nvar seq65019__$1 \x3d cljs.core.next(seq65019);\nvar G__65021 \x3d cljs.core.first(seq65019__$1);\nvar seq65019__$2 \x3d cljs.core.next(seq65019__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__65020,G__65021,seq65019__$2);\n}));\n\n");
SHADOW_ENV.evalLoad("reagent.impl.batching.js", true , "goog.provide(\x27reagent.impl.batching\x27);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.mount_count !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.mount_count \x3d (0);\n}\nreagent.impl.batching.next_mount_count \x3d (function reagent$impl$batching$next_mount_count(){\nreturn (reagent.impl.batching.mount_count \x3d (reagent.impl.batching.mount_count + (1)));\n});\nreagent.impl.batching.fake_raf \x3d (function reagent$impl$batching$fake_raf(f){\nreturn setTimeout(f,(16));\n});\nreagent.impl.batching.next_tick \x3d (((!(reagent.impl.util.is_client)))?reagent.impl.batching.fake_raf:(function (){var w \x3d window;\nreturn (function (){var or__4223__auto__ \x3d w.requestAnimationFrame;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 \x3d w.webkitRequestAnimationFrame;\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nvar or__4223__auto____$2 \x3d w.mozRequestAnimationFrame;\nif(cljs.core.truth_(or__4223__auto____$2)){\nreturn or__4223__auto____$2;\n} else {\nvar or__4223__auto____$3 \x3d w.msRequestAnimationFrame;\nif(cljs.core.truth_(or__4223__auto____$3)){\nreturn or__4223__auto____$3;\n} else {\nreturn reagent.impl.batching.fake_raf;\n}\n}\n}\n}\n})().bind(w);\n})());\nreagent.impl.batching.compare_mount_order \x3d (function reagent$impl$batching$compare_mount_order(c1,c2){\nreturn (c1.cljsMountOrder - c2.cljsMountOrder);\n});\nreagent.impl.batching.run_queue \x3d (function reagent$impl$batching$run_queue(a){\na.sort(reagent.impl.batching.compare_mount_order);\n\nvar n__4706__auto__ \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__4706__auto__)){\nvar c_65155 \x3d (a[i]);\nif(c_65155.cljsIsDirty \x3d\x3d\x3d true){\nc_65155.forceUpdate();\n} else {\n}\n\nvar G__65157 \x3d (i + (1));\ni \x3d G__65157;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.ratom_flush !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.ratom_flush \x3d (function reagent$impl$batching$ratom_flush(){\nreturn null;\n});\n}\nreagent.impl.batching.run_funs \x3d (function reagent$impl$batching$run_funs(fs){\nvar n__4706__auto__ \x3d fs.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__4706__auto__)){\nvar fexpr__65081_65160 \x3d (fs[i]);\n(fexpr__65081_65160.cljs$core$IFn$_invoke$arity$0 ? fexpr__65081_65160.cljs$core$IFn$_invoke$arity$0() : fexpr__65081_65160.call(null));\n\nvar G__65161 \x3d (i + (1));\ni \x3d G__65161;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.impl.batching.enqueue \x3d (function reagent$impl$batching$enqueue(queue,fs,f){\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Enqueued function\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22f\x22].join(\x27\x27)));\n}\n\nfs.push(f);\n\nreturn queue.schedule();\n});\n\n/**\n* @constructor\n*/\nreagent.impl.batching.RenderQueue \x3d (function (scheduled_QMARK_){\nthis.scheduled_QMARK_ \x3d scheduled_QMARK_;\n});\n(reagent.impl.batching.RenderQueue.prototype.flush_after_render \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5757__auto__ \x3d this$.afterRender;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5757__auto__;\n(this$.afterRender \x3d null);\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.queue_render \x3d (function (c){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.componentQueue \x3d\x3d null)){\n(this$.componentQueue \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.componentQueue,c);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.schedule \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(self__.scheduled_QMARK_){\nreturn null;\n} else {\n(self__.scheduled_QMARK_ \x3d true);\n\nvar G__65105 \x3d (function (){\nreturn this$.run_queues();\n});\nreturn (reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1(G__65105) : reagent.impl.batching.next_tick.call(null,G__65105));\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_before_flush \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5757__auto__ \x3d this$.beforeFlush;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5757__auto__;\n(this$.beforeFlush \x3d null);\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_queues \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nthis$.flush_before_flush();\n\nreagent.impl.batching.ratom_flush();\n\nthis$.flush_render();\n\nreturn this$.flush_after_render();\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.run_queues \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\n(self__.scheduled_QMARK_ \x3d false);\n\nreturn this$.flush_queues();\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.add_before_flush \x3d (function (f){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.beforeFlush \x3d\x3d null)){\n(this$.beforeFlush \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.beforeFlush,f);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.add_after_render \x3d (function (f){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.afterRender \x3d\x3d null)){\n(this$.afterRender \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.afterRender,f);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_render \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5757__auto__ \x3d this$.componentQueue;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5757__auto__;\n(this$.componentQueue \x3d null);\n\nreturn reagent.impl.batching.run_queue(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22scheduled?\x22,\x22scheduled?\x22,579986609,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.impl.batching.RenderQueue.cljs$lang$type \x3d true);\n\n(reagent.impl.batching.RenderQueue.cljs$lang$ctorStr \x3d \x22reagent.impl.batching/RenderQueue\x22);\n\n(reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.impl.batching/RenderQueue\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.batching/RenderQueue.\n */\nreagent.impl.batching.__GT_RenderQueue \x3d (function reagent$impl$batching$__GT_RenderQueue(scheduled_QMARK_){\nreturn (new reagent.impl.batching.RenderQueue(scheduled_QMARK_));\n});\n\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.render_queue !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.render_queue \x3d reagent.impl.batching.__GT_RenderQueue(false);\n}\nreagent.impl.batching.flush \x3d (function reagent$impl$batching$flush(){\nreturn reagent.impl.batching.render_queue.flush_queues();\n});\nreagent.impl.batching.flush_after_render \x3d (function reagent$impl$batching$flush_after_render(){\nreturn reagent.impl.batching.render_queue.flush_after_render();\n});\nreagent.impl.batching.queue_render \x3d (function reagent$impl$batching$queue_render(c){\nif(cljs.core.truth_(c.cljsIsDirty)){\nreturn null;\n} else {\n(c.cljsIsDirty \x3d true);\n\nreturn reagent.impl.batching.render_queue.queue_render(c);\n}\n});\nreagent.impl.batching.mark_rendered \x3d (function reagent$impl$batching$mark_rendered(c){\nreturn (c.cljsIsDirty \x3d false);\n});\nreagent.impl.batching.do_before_flush \x3d (function reagent$impl$batching$do_before_flush(f){\nreturn reagent.impl.batching.render_queue.add_before_flush(f);\n});\nreagent.impl.batching.do_after_render \x3d (function reagent$impl$batching$do_after_render(f){\nreturn reagent.impl.batching.render_queue.add_after_render(f);\n});\nreagent.impl.batching.schedule \x3d (function reagent$impl$batching$schedule(){\nif(reagent.impl.batching.render_queue.scheduled_QMARK_ \x3d\x3d\x3d false){\nreturn reagent.impl.batching.render_queue.schedule();\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.protocols.js", true , "goog.provide(\x27reagent.impl.protocols\x27);\n\n/**\n * @interface\n */\nreagent.impl.protocols.Compiler \x3d function(){};\n\nvar reagent$impl$protocols$Compiler$get_id$dyn_65358 \x3d (function (this$){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.impl.protocols.get_id[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\n} else {\nvar m__4519__auto__ \x3d (reagent.impl.protocols.get_id[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.get-id\x22,this$);\n}\n}\n});\nreagent.impl.protocols.get_id \x3d (function reagent$impl$protocols$get_id(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$get_id$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$get_id$arity$1(this$);\n} else {\nreturn reagent$impl$protocols$Compiler$get_id$dyn_65358(this$);\n}\n});\n\nvar reagent$impl$protocols$Compiler$parse_tag$dyn_65365 \x3d (function (this$,tag_name,tag_value){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.impl.protocols.parse_tag[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$3(this$,tag_name,tag_value) : m__4522__auto__.call(null,this$,tag_name,tag_value));\n} else {\nvar m__4519__auto__ \x3d (reagent.impl.protocols.parse_tag[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$3(this$,tag_name,tag_value) : m__4519__auto__.call(null,this$,tag_name,tag_value));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.parse-tag\x22,this$);\n}\n}\n});\nreagent.impl.protocols.parse_tag \x3d (function reagent$impl$protocols$parse_tag(this$,tag_name,tag_value){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$parse_tag$arity$3 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$parse_tag$arity$3(this$,tag_name,tag_value);\n} else {\nreturn reagent$impl$protocols$Compiler$parse_tag$dyn_65365(this$,tag_name,tag_value);\n}\n});\n\nvar reagent$impl$protocols$Compiler$as_element$dyn_65370 \x3d (function (this$,x){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.impl.protocols.as_element[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$2(this$,x) : m__4522__auto__.call(null,this$,x));\n} else {\nvar m__4519__auto__ \x3d (reagent.impl.protocols.as_element[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$2(this$,x) : m__4519__auto__.call(null,this$,x));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.as-element\x22,this$);\n}\n}\n});\nreagent.impl.protocols.as_element \x3d (function reagent$impl$protocols$as_element(this$,x){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$as_element$arity$2 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$as_element$arity$2(this$,x);\n} else {\nreturn reagent$impl$protocols$Compiler$as_element$dyn_65370(this$,x);\n}\n});\n\nvar reagent$impl$protocols$Compiler$make_element$dyn_65377 \x3d (function (this$,argv,component,jsprops,first_child){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.impl.protocols.make_element[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$5(this$,argv,component,jsprops,first_child) : m__4522__auto__.call(null,this$,argv,component,jsprops,first_child));\n} else {\nvar m__4519__auto__ \x3d (reagent.impl.protocols.make_element[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$5(this$,argv,component,jsprops,first_child) : m__4519__auto__.call(null,this$,argv,component,jsprops,first_child));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.make-element\x22,this$);\n}\n}\n});\nreagent.impl.protocols.make_element \x3d (function reagent$impl$protocols$make_element(this$,argv,component,jsprops,first_child){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$make_element$arity$5 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$make_element$arity$5(this$,argv,component,jsprops,first_child);\n} else {\nreturn reagent$impl$protocols$Compiler$make_element$dyn_65377(this$,argv,component,jsprops,first_child);\n}\n});\n\n");
SHADOW_ENV.evalLoad("reagent.ratom.js", true , "goog.provide(\x27reagent.ratom\x27);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.debug !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.debug \x3d false;\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.generation !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.generation \x3d (0);\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom._running !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom._running \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ \x3d (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)));\n});\nreagent.ratom.running \x3d (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len \x3d (function reagent$ratom$arr_len(x){\nif((x \x3d\x3d null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq \x3d (function reagent$ratom$arr_eq(x,y){\nvar len \x3d reagent.ratom.arr_len(x);\nvar and__4221__auto__ \x3d (len \x3d\x3d\x3d reagent.ratom.arr_len(y));\nif(and__4221__auto__){\nvar i \x3d (0);\nwhile(true){\nvar or__4223__auto__ \x3d (i \x3d\x3d\x3d len);\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nif(((x[i]) \x3d\x3d\x3d (y[i]))){\nvar G__66203 \x3d (i + (1));\ni \x3d G__66203;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4221__auto__;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to \x27obj.captured\x27(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context \x3d (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__65609 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__65610 \x3d obj;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__65610);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__65609);\n}});\n/**\n * Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside \x27_update-watching\x27 along with adding the ratoms in \x27r.watching\x27 of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture \x3d (function reagent$ratom$deref_capture(f,r){\n(r.captured \x3d null);\n\n(r.ratomGeneration \x3d (reagent.ratom.generation \x3d (reagent.ratom.generation + (1))));\n\n\nvar res \x3d reagent.ratom.in_context(r,f);\nvar c \x3d r.captured;\n(r.dirty_QMARK_ \x3d false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ \x3d (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5757__auto__ \x3d reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar r \x3d temp__5757__auto__;\nvar c \x3d r.captured;\nif((c \x3d\x3d null)){\nreturn (r.captured \x3d [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches \x3d (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w \x3d (function reagent$ratom$add_w(this$,key,f){\nvar w \x3d this$.watches;\n(this$.watches \x3d reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr \x3d null);\n});\nreagent.ratom.remove_w \x3d (function reagent$ratom$remove_w(this$,key){\nvar w \x3d this$.watches;\n(this$.watches \x3d reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr \x3d null);\n});\nreagent.ratom.notify_w \x3d (function reagent$ratom$notify_w(this$,old,new$){\nvar w \x3d this$.watchesArr;\nvar a \x3d (((w \x3d\x3d null))?(this$.watchesArr \x3d cljs.core.reduce_kv((function (p1__65631_SHARP_,p2__65632_SHARP_,p3__65633_SHARP_){\nvar G__65637 \x3d p1__65631_SHARP_;\nG__65637.push(p2__65632_SHARP_);\n\nG__65637.push(p3__65633_SHARP_);\n\nreturn G__65637;\n}),[],this$.watches)):w);\nvar len \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar k_66213 \x3d (a[i]);\nvar f_66214 \x3d (a[(i + (1))]);\n(f_66214.cljs$core$IFn$_invoke$arity$4 ? f_66214.cljs$core$IFn$_invoke$arity$4(k_66213,this$,old,new$) : f_66214.call(null,k_66213,this$,old,new$));\n\nvar G__66216 \x3d ((2) + i);\ni \x3d G__66216;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom \x3d (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\x22#object[reagent.ratom.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\x22 \x22].join(\x27\x27));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__65642 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__65643 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__65643);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__65642);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\x22]\x22);\n});\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.rea_queue !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.rea_queue \x3d null;\n}\nreagent.ratom.rea_enqueue \x3d (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue \x3d\x3d null)){\n(reagent.ratom.rea_queue \x3d []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom \x3d function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom \x3d (function (state,meta,validator,watches){\nthis.state \x3d state;\nthis.meta \x3d meta;\nthis.validator \x3d validator;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22RAtom\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn (o__$1 \x3d\x3d\x3d other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (a,new_value){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nif((self__.validator \x3d\x3d null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Validator rejected reference state\x22,\x22\\n\x22,\x22(validator new-value)\x22].join(\x27\x27)));\n}\n}\n\nvar old_value \x3d self__.state;\n(self__.state \x3d new_value);\n\nif((self__.watches \x3d\x3d null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22validator\x22,\x22validator\x22,-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type \x3d true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr \x3d \x22reagent.ratom/RAtom\x22);\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.ratom/RAtom\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom \x3d (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom \x3d (function reagent$ratom$atom(var_args){\nvar G__65704 \x3d arguments.length;\nswitch (G__65704) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___66277 \x3d arguments.length;\nvar i__4830__auto___66278 \x3d (0);\nwhile(true){\nif((i__4830__auto___66278 \x3c len__4829__auto___66277)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___66278]));\n\nvar G__66279 \x3d (i__4830__auto___66278 + (1));\ni__4830__auto___66278 \x3d G__66279;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__65720){\nvar map__65721 \x3d p__65720;\nvar map__65721__$1 \x3d cljs.core.__destructure_map(map__65721);\nvar meta \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65721__$1,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964));\nvar validator \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65721__$1,new cljs.core.Keyword(null,\x22validator\x22,\x22validator\x22,-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo \x3d (function (seq65701){\nvar G__65702 \x3d cljs.core.first(seq65701);\nvar seq65701__$1 \x3d cljs.core.next(seq65701);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__65702,seq65701__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity \x3d (1));\n\nreagent.ratom.cached_reaction \x3d (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m \x3d o.reagReactionCache;\nvar m__$1 \x3d (((m \x3d\x3d null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r \x3d (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r \x3d\x3d null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 \x3d (function (){var G__65752 \x3d f;\nvar G__65753 \x3d new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360);\nvar G__65754 \x3d (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __66285 \x3d o.reagReactionCache;\nvar __66286__$1 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__66285,k);\n(o.reagReactionCache \x3d __66286__$1);\n\nif((!((obj \x3d\x3d null)))){\n(obj.reaction \x3d null);\n} else {\n}\n\nif((!((destroy \x3d\x3d null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__65752,G__65753,G__65754) : reagent.ratom.make_reaction.call(null,G__65752,G__65753,G__65754));\n})();\nvar v \x3d cljs.core._deref(r__$1);\n(o.reagReactionCache \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj \x3d\x3d null)))){\n(obj.reaction \x3d r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track \x3d (function (f,args,reaction){\nthis.f \x3d f;\nthis.args \x3d args;\nthis.reaction \x3d reaction;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5755__auto__ \x3d self__.reaction;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r \x3d temp__5755__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.ratom.Track)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Track\x22,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\x22f\x22,\x22f\x22,-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22args\x22,\x22args\x22,-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22reaction\x22,\x22reaction\x22,2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type \x3d true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr \x3d \x22reagent.ratom/Track\x22);\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.ratom/Track\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track \x3d (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track \x3d (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ \x3d (function reagent$ratom$make_track_BANG_(f,args){\nvar t \x3d reagent.ratom.make_track(f,args);\nvar r \x3d (function (){var G__65793 \x3d (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__65794 \x3d new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437);\nvar G__65795 \x3d true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__65793,G__65794,G__65795) : reagent.ratom.make_reaction.call(null,G__65793,G__65794,G__65795));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track \x3d (function reagent$ratom$track(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___66300 \x3d arguments.length;\nvar i__4830__auto___66301 \x3d (0);\nwhile(true){\nif((i__4830__auto___66301 \x3c len__4829__auto___66300)){\nargs__4835__auto__.push((arguments[i__4830__auto___66301]));\n\nvar G__66302 \x3d (i__4830__auto___66301 + (1));\ni__4830__auto___66301 \x3d G__66302;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo \x3d (function (seq65810){\nvar G__65812 \x3d cljs.core.first(seq65810);\nvar seq65810__$1 \x3d cljs.core.next(seq65810);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__65812,seq65810__$1);\n}));\n\nreagent.ratom.track_BANG_ \x3d (function reagent$ratom$track_BANG_(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___66307 \x3d arguments.length;\nvar i__4830__auto___66308 \x3d (0);\nwhile(true){\nif((i__4830__auto___66308 \x3c len__4829__auto___66307)){\nargs__4835__auto__.push((arguments[i__4830__auto___66308]));\n\nvar G__66309 \x3d (i__4830__auto___66308 + (1));\ni__4830__auto___66308 \x3d G__66309;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo \x3d (function (seq65826){\nvar G__65827 \x3d cljs.core.first(seq65826);\nvar seq65826__$1 \x3d cljs.core.next(seq65826);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__65827,seq65826__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor \x3d (function (ratom,path,reaction,state,watches){\nthis.ratom \x3d ratom;\nthis.path \x3d path;\nthis.reaction \x3d reaction;\nthis.state \x3d state;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.RCursor.prototype._peek \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar _STAR_ratom_context_STAR__orig_val__65845 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__65846 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__65846);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__65845);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state \x3d (function (oldstate,newstate){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((oldstate \x3d\x3d\x3d newstate)){\nreturn null;\n} else {\n(self__.state \x3d newstate);\n\nif((!((self__.watches \x3d\x3d null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22RCursor\x22,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\x22path\x22,\x22path\x22,-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.ratom.RCursor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)))));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (this$,new_value){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldstate \x3d self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom \x3d\x3d null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__65861 \x3d a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__65861) : f.call(null,G__65861));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__65862 \x3d a__$1._peek();\nvar G__65863 \x3d x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__65862,G__65863) : f.call(null,G__65862,G__65863));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__65873 \x3d a__$1._peek();\nvar G__65874 \x3d x;\nvar G__65875 \x3d y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__65873,G__65874,G__65875) : f.call(null,G__65873,G__65874,G__65875));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldstate \x3d self__.state;\nvar newstate \x3d (function (){var temp__5755__auto__ \x3d self__.reaction;\nif((temp__5755__auto__ \x3d\x3d null)){\nvar f \x3d (((((!((self__.ratom \x3d\x3d null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r \x3d temp__5755__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ratom\x22,\x22ratom\x22,1514010260,null),new cljs.core.Symbol(null,\x22path\x22,\x22path\x22,1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22reaction\x22,\x22reaction\x22,2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type \x3d true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr \x3d \x22reagent.ratom/RCursor\x22);\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.ratom/RCursor\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor \x3d (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor \x3d (function reagent$ratom$cursor(src,path){\nif((function (){var or__4223__auto__ \x3d (((!((src \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4223__auto__){\nreturn or__4223__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) \x26\x26 ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22src must be a reactive atom or a function, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\x22 while attempting to get path: \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(\x27\x27),\x22\\n\x22,\x22(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\x22].join(\x27\x27)));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy \x3d (function reagent$ratom$with_let_destroy(v){\nvar temp__5757__auto__ \x3d v.destroy;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar f \x3d temp__5757__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values \x3d (function reagent$ratom$with_let_values(key){\nvar temp__5755__auto__ \x3d reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn [];\n} else {\nvar c \x3d temp__5755__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable \x3d function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_66336 \x3d (function (this$){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.ratom.dispose_BANG_[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\n} else {\nvar m__4519__auto__ \x3d (reagent.ratom.dispose_BANG_[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IDisposable.dispose!\x22,this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ \x3d (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_66336(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_66337 \x3d (function (this$,f){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4522__auto__.call(null,this$,f));\n} else {\nvar m__4519__auto__ \x3d (reagent.ratom.add_on_dispose_BANG_[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4519__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\x22IDisposable.add-on-dispose!\x22,this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ \x3d (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_66337(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable \x3d function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_66342 \x3d (function (this$){\nvar x__4521__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__4522__auto__ \x3d (reagent.ratom.run[goog.typeOf(x__4521__auto__)]);\nif((!((m__4522__auto__ \x3d\x3d null)))){\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\n} else {\nvar m__4519__auto__ \x3d (reagent.ratom.run[\x22_\x22]);\nif((!((m__4519__auto__ \x3d\x3d null)))){\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IRunnable.run\x22,this$);\n}\n}\n});\nreagent.ratom.run \x3d (function reagent$ratom$run(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IRunnable$run$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_66342(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change \x3d (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction \x3d (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f \x3d f;\nthis.state \x3d state;\nthis.dirty_QMARK_ \x3d dirty_QMARK_;\nthis.nocache_QMARK_ \x3d nocache_QMARK_;\nthis.watching \x3d watching;\nthis.watches \x3d watches;\nthis.auto_run \x3d auto_run;\nthis.caught \x3d caught;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar _STAR_ratom_context_STAR__orig_val__65971 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__65972 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__65972);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__65971);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change \x3d (function (sender,oldval,newval){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((((oldval \x3d\x3d\x3d newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run \x3d\x3d null)){\n(self__.dirty_QMARK_ \x3d true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run \x3d\x3d\x3d true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching \x3d (function (derefed){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar new$ \x3d cljs.core.set(derefed);\nvar old \x3d cljs.core.set(self__.watching);\n(self__.watching \x3d derefed);\n\nvar seq__65976_66346 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__65977_66347 \x3d null;\nvar count__65978_66348 \x3d (0);\nvar i__65979_66349 \x3d (0);\nwhile(true){\nif((i__65979_66349 \x3c count__65978_66348)){\nvar w_66352 \x3d chunk__65977_66347.cljs$core$IIndexed$_nth$arity$2(null,i__65979_66349);\ncljs.core._add_watch(w_66352,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__66354 \x3d seq__65976_66346;\nvar G__66355 \x3d chunk__65977_66347;\nvar G__66356 \x3d count__65978_66348;\nvar G__66357 \x3d (i__65979_66349 + (1));\nseq__65976_66346 \x3d G__66354;\nchunk__65977_66347 \x3d G__66355;\ncount__65978_66348 \x3d G__66356;\ni__65979_66349 \x3d G__66357;\ncontinue;\n} else {\nvar temp__5753__auto___66358 \x3d cljs.core.seq(seq__65976_66346);\nif(temp__5753__auto___66358){\nvar seq__65976_66359__$1 \x3d temp__5753__auto___66358;\nif(cljs.core.chunked_seq_QMARK_(seq__65976_66359__$1)){\nvar c__4649__auto___66360 \x3d cljs.core.chunk_first(seq__65976_66359__$1);\nvar G__66361 \x3d cljs.core.chunk_rest(seq__65976_66359__$1);\nvar G__66362 \x3d c__4649__auto___66360;\nvar G__66363 \x3d cljs.core.count(c__4649__auto___66360);\nvar G__66364 \x3d (0);\nseq__65976_66346 \x3d G__66361;\nchunk__65977_66347 \x3d G__66362;\ncount__65978_66348 \x3d G__66363;\ni__65979_66349 \x3d G__66364;\ncontinue;\n} else {\nvar w_66365 \x3d cljs.core.first(seq__65976_66359__$1);\ncljs.core._add_watch(w_66365,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__66366 \x3d cljs.core.next(seq__65976_66359__$1);\nvar G__66367 \x3d null;\nvar G__66368 \x3d (0);\nvar G__66369 \x3d (0);\nseq__65976_66346 \x3d G__66366;\nchunk__65977_66347 \x3d G__66367;\ncount__65978_66348 \x3d G__66368;\ni__65979_66349 \x3d G__66369;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__65989 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__65990 \x3d null;\nvar count__65991 \x3d (0);\nvar i__65992 \x3d (0);\nwhile(true){\nif((i__65992 \x3c count__65991)){\nvar w \x3d chunk__65990.cljs$core$IIndexed$_nth$arity$2(null,i__65992);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__66371 \x3d seq__65989;\nvar G__66372 \x3d chunk__65990;\nvar G__66373 \x3d count__65991;\nvar G__66374 \x3d (i__65992 + (1));\nseq__65989 \x3d G__66371;\nchunk__65990 \x3d G__66372;\ncount__65991 \x3d G__66373;\ni__65992 \x3d G__66374;\ncontinue;\n} else {\nvar temp__5753__auto__ \x3d cljs.core.seq(seq__65989);\nif(temp__5753__auto__){\nvar seq__65989__$1 \x3d temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__65989__$1)){\nvar c__4649__auto__ \x3d cljs.core.chunk_first(seq__65989__$1);\nvar G__66378 \x3d cljs.core.chunk_rest(seq__65989__$1);\nvar G__66379 \x3d c__4649__auto__;\nvar G__66380 \x3d cljs.core.count(c__4649__auto__);\nvar G__66381 \x3d (0);\nseq__65989 \x3d G__66378;\nchunk__65990 \x3d G__66379;\ncount__65991 \x3d G__66380;\ni__65992 \x3d G__66381;\ncontinue;\n} else {\nvar w \x3d cljs.core.first(seq__65989__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__66382 \x3d cljs.core.next(seq__65989__$1);\nvar G__66383 \x3d null;\nvar G__66384 \x3d (0);\nvar G__66385 \x3d (0);\nseq__65989 \x3d G__66382;\nchunk__65990 \x3d G__66383;\ncount__65991 \x3d G__66384;\ni__65992 \x3d G__66385;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(((self__.dirty_QMARK_) \x26\x26 ((!((self__.watching \x3d\x3d null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture \x3d (function (f__$1){\nvar self__ \x3d this;\nvar this$ \x3d this;\ntry{(self__.caught \x3d null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e65993){var e \x3d e65993;\n(self__.state \x3d e);\n\n(self__.caught \x3d e);\n\nreturn (self__.dirty_QMARK_ \x3d false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run \x3d (function (check){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar oldstate \x3d self__.state;\nvar res \x3d (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state \x3d res);\n\nif((((self__.watches \x3d\x3d null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts \x3d (function (p__65996){\nvar self__ \x3d this;\nvar map__65997 \x3d p__65996;\nvar map__65997__$1 \x3d cljs.core.__destructure_map(map__65997);\nvar auto_run__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65997__$1,new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437));\nvar on_set \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65997__$1,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470));\nvar on_dispose \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65997__$1,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360));\nvar no_cache \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65997__$1,new cljs.core.Keyword(null,\x22no-cache\x22,\x22no-cache\x22,1588056370));\nvar this$ \x3d this;\nif((!((auto_run__$1 \x3d\x3d null)))){\n(this$.auto_run \x3d auto_run__$1);\n} else {\n}\n\nif((!((on_set \x3d\x3d null)))){\n(this$.on_set \x3d on_set);\n} else {\n}\n\nif((!((on_dispose \x3d\x3d null)))){\n(this$.on_dispose \x3d on_dispose);\n} else {\n}\n\nif((!((no_cache \x3d\x3d null)))){\nreturn (this$.nocache_QMARK_ \x3d no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Reaction\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn (o__$1 \x3d\x3d\x3d other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar s \x3d self__.state;\nvar wg \x3d self__.watching;\n(self__.watching \x3d null);\n\n(self__.state \x3d null);\n\n(self__.auto_run \x3d null);\n\n(self__.dirty_QMARK_ \x3d true);\n\nvar seq__66000_66400 \x3d cljs.core.seq(cljs.core.set(wg));\nvar chunk__66001_66401 \x3d null;\nvar count__66002_66402 \x3d (0);\nvar i__66003_66403 \x3d (0);\nwhile(true){\nif((i__66003_66403 \x3c count__66002_66402)){\nvar w_66404 \x3d chunk__66001_66401.cljs$core$IIndexed$_nth$arity$2(null,i__66003_66403);\ncljs.core._remove_watch(w_66404,this$__$1);\n\n\nvar G__66409 \x3d seq__66000_66400;\nvar G__66410 \x3d chunk__66001_66401;\nvar G__66411 \x3d count__66002_66402;\nvar G__66412 \x3d (i__66003_66403 + (1));\nseq__66000_66400 \x3d G__66409;\nchunk__66001_66401 \x3d G__66410;\ncount__66002_66402 \x3d G__66411;\ni__66003_66403 \x3d G__66412;\ncontinue;\n} else {\nvar temp__5753__auto___66421 \x3d cljs.core.seq(seq__66000_66400);\nif(temp__5753__auto___66421){\nvar seq__66000_66422__$1 \x3d temp__5753__auto___66421;\nif(cljs.core.chunked_seq_QMARK_(seq__66000_66422__$1)){\nvar c__4649__auto___66423 \x3d cljs.core.chunk_first(seq__66000_66422__$1);\nvar G__66428 \x3d cljs.core.chunk_rest(seq__66000_66422__$1);\nvar G__66429 \x3d c__4649__auto___66423;\nvar G__66430 \x3d cljs.core.count(c__4649__auto___66423);\nvar G__66431 \x3d (0);\nseq__66000_66400 \x3d G__66428;\nchunk__66001_66401 \x3d G__66429;\ncount__66002_66402 \x3d G__66430;\ni__66003_66403 \x3d G__66431;\ncontinue;\n} else {\nvar w_66433 \x3d cljs.core.first(seq__66000_66422__$1);\ncljs.core._remove_watch(w_66433,this$__$1);\n\n\nvar G__66436 \x3d cljs.core.next(seq__66000_66422__$1);\nvar G__66437 \x3d null;\nvar G__66438 \x3d (0);\nvar G__66439 \x3d (0);\nseq__66000_66400 \x3d G__66436;\nchunk__66001_66401 \x3d G__66437;\ncount__66002_66402 \x3d G__66438;\ni__66003_66403 \x3d G__66439;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose \x3d\x3d null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5757__auto__ \x3d this$__$1.on_dispose_arr;\nif((temp__5757__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar a \x3d temp__5757__auto__;\nvar n__4706__auto__ \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__4706__auto__)){\nvar fexpr__66015_66448 \x3d (a[i]);\n(fexpr__66015_66448.cljs$core$IFn$_invoke$arity$1 ? fexpr__66015_66448.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__66015_66448.call(null,this$__$1));\n\nvar G__66449 \x3d (i + (1));\ni \x3d G__66449;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 \x3d (function (this$,f__$1){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5755__auto__ \x3d this$__$1.on_dispose_arr;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn (this$__$1.on_dispose_arr \x3d [f__$1]);\n} else {\nvar a \x3d temp__5755__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (a,newval){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Reaction is read only; on-set is not allowed\x22,\x22\\n\x22,\x22(fn? (.-on-set a))\x22].join(\x27\x27)));\n}\n\nvar oldval \x3d self__.state;\n(self__.state \x3d newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f__$1){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__66023 \x3d a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__66023) : f__$1.call(null,G__66023));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f__$1,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__66024 \x3d a__$1._peek_at();\nvar G__66025 \x3d x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__66024,G__66025) : f__$1.call(null,G__66024,G__66025));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f__$1,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__66026 \x3d a__$1._peek_at();\nvar G__66027 \x3d x;\nvar G__66028 \x3d y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__66026,G__66027,G__66028) : f__$1.call(null,G__66026,G__66027,G__66028));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f__$1,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f__$1){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar was_empty \x3d cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) \x26\x26 (((cljs.core.empty_QMARK_(self__.watches)) \x26\x26 ((self__.auto_run \x3d\x3d null)))))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5757__auto___66504 \x3d self__.caught;\nif((temp__5757__auto___66504 \x3d\x3d null)){\n} else {\nvar e_66509 \x3d temp__5757__auto___66504;\nthrow e_66509;\n}\n\nvar non_reactive_66510 \x3d (reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null);\nif(non_reactive_66510){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_66510) \x26\x26 ((self__.auto_run \x3d\x3d null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_66517 \x3d self__.state;\n(self__.state \x3d (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches \x3d\x3d null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_66517,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_66517,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22dirty?\x22,\x22dirty?\x22,-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22nocache?\x22,\x22nocache?\x22,-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watching\x22,\x22watching\x22,1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22auto-run\x22,\x22auto-run\x22,-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22caught\x22,\x22caught\x22,2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type \x3d true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr \x3d \x22reagent.ratom/Reaction\x22);\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.ratom/Reaction\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction \x3d (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ \x3d (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q \x3d reagent.ratom.rea_queue;\nif((q \x3d\x3d null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue \x3d null);\n\nvar n__4706__auto___66550 \x3d q.length;\nvar i_66551 \x3d (0);\nwhile(true){\nif((i_66551 \x3c n__4706__auto___66550)){\nvar r_66553 \x3d (q[i_66551]);\nr_66553._queued_run();\n\nvar G__66554 \x3d (i_66551 + (1));\ni_66551 \x3d G__66554;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush \x3d reagent.ratom.flush_BANG_);\nreagent.ratom.make_reaction \x3d (function reagent$ratom$make_reaction(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___66567 \x3d arguments.length;\nvar i__4830__auto___66572 \x3d (0);\nwhile(true){\nif((i__4830__auto___66572 \x3c len__4829__auto___66567)){\nargs__4835__auto__.push((arguments[i__4830__auto___66572]));\n\nvar G__66577 \x3d (i__4830__auto___66572 + (1));\ni__4830__auto___66572 \x3d G__66577;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,p__66049){\nvar map__66051 \x3d p__66049;\nvar map__66051__$1 \x3d cljs.core.__destructure_map(map__66051);\nvar auto_run \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66051__$1,new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437));\nvar on_set \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66051__$1,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470));\nvar on_dispose \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66051__$1,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360));\nvar reaction \x3d reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437),auto_run,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470),on_set,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo \x3d (function (seq66044){\nvar G__66045 \x3d cljs.core.first(seq66044);\nvar seq66044__$1 \x3d cljs.core.next(seq66044);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__66045,seq66044__$1);\n}));\n\nreagent.ratom.temp_reaction \x3d reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of \x27watches\x27 of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction \x3d (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r \x3d reagent.ratom.temp_reaction;\nvar res \x3d reagent.ratom.deref_capture(f,r);\nif((r.watching \x3d\x3d null)){\n} else {\n(reagent.ratom.temp_reaction \x3d reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f \x3d f);\n\n(r.auto_run \x3d (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs \x3d (function reagent$ratom$check_derefs(f){\nvar ctx \x3d ({});\nvar res \x3d reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured \x3d\x3d null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper \x3d (function (state,callback,changed,watches){\nthis.state \x3d state;\nthis.callback \x3d callback;\nthis.changed \x3d changed;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif(((self__.changed) \x26\x26 ((!((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22derefing stale wrap: \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (this$,newval){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldval \x3d self__.state;\n(self__.changed \x3d true);\n\n(self__.state \x3d newval);\n\nif((!((self__.watches \x3d\x3d null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (((other instanceof reagent.ratom.Wrapper)) \x26\x26 ((((!(self__.changed))) \x26\x26 (((cljs.core.not(other.changed)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)))))))));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Wrapper\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22callback\x22,\x22callback\x22,935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22changed\x22,\x22changed\x22,-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type \x3d true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr \x3d \x22reagent.ratom/Wrapper\x22);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.ratom/Wrapper\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper \x3d (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper \x3d (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.component.js", true , "goog.provide(\x27reagent.impl.component\x27);\nvar module$node_modules$react$index\x3dshadow.js.require(\x22module$node_modules$react$index\x22, {});\nreagent.impl.component.extract_props \x3d (function reagent$impl$component$extract_props(v){\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core.map_QMARK_(p)){\nreturn p;\n} else {\nreturn null;\n}\n});\nreagent.impl.component.extract_children \x3d (function reagent$impl$component$extract_children(v){\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nvar first_child \x3d (((((p \x3d\x3d null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\nif((cljs.core.count(v) \x3e first_child)){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\n} else {\nreturn null;\n}\n});\nreagent.impl.component.props_argv \x3d (function reagent$impl$component$props_argv(c,p){\nvar temp__5755__auto__ \x3d p.argv;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\n} else {\nvar a \x3d temp__5755__auto__;\nreturn a;\n}\n});\nreagent.impl.component.get_argv \x3d (function reagent$impl$component$get_argv(c){\nreturn reagent.impl.component.props_argv(c,c.props);\n});\nreagent.impl.component.get_props \x3d (function reagent$impl$component$get_props(c){\nvar p \x3d c.props;\nvar temp__5755__auto__ \x3d p.argv;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn reagent.impl.util.shallow_obj_to_map(p);\n} else {\nvar v \x3d temp__5755__auto__;\nreturn reagent.impl.component.extract_props(v);\n}\n});\nreagent.impl.component.get_children \x3d (function reagent$impl$component$get_children(c){\nvar p \x3d c.props;\nvar temp__5755__auto__ \x3d p.argv;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,module$node_modules$react$index.Children.toArray(p.children));\n} else {\nvar v \x3d temp__5755__auto__;\nreturn reagent.impl.component.extract_children(v);\n}\n});\nreagent.impl.component.reagent_class_QMARK_ \x3d (function reagent$impl$component$reagent_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) \x26\x26 ((!(((function (){var G__66280 \x3d c;\nvar G__66280__$1 \x3d (((G__66280 \x3d\x3d null))?null:G__66280.prototype);\nif((G__66280__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__66280__$1.reagentRender;\n}\n})() \x3d\x3d null)))));\n});\nreagent.impl.component.react_class_QMARK_ \x3d (function reagent$impl$component$react_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) \x26\x26 ((!(((function (){var G__66291 \x3d c;\nvar G__66291__$1 \x3d (((G__66291 \x3d\x3d null))?null:G__66291.prototype);\nif((G__66291__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__66291__$1.render;\n}\n})() \x3d\x3d null)))));\n});\nreagent.impl.component.reagent_component_QMARK_ \x3d (function reagent$impl$component$reagent_component_QMARK_(c){\nreturn (!((c.reagentRender \x3d\x3d null)));\n});\nreagent.impl.component.state_atom \x3d (function reagent$impl$component$state_atom(this$){\nvar sa \x3d this$.cljsState;\nif((!((sa \x3d\x3d null)))){\nreturn sa;\n} else {\nreturn (this$.cljsState \x3d reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\n}\n});\n/**\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\n *      a react element with a render function based on that hiccup\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n *      and calls wrap-render again (`recur`), until the render result doesn\x27t evaluate to a function.\n *   3) Anything else - Returns the result of evaluating `c`\n */\nreagent.impl.component.wrap_render \x3d (function reagent$impl$component$wrap_render(c,compiler){\nwhile(true){\nvar f \x3d c.reagentRender;\nvar _ \x3d ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)))})());\nvar res \x3d ((c.cljsLegacyRender \x3d\x3d\x3d true)?f.call(c,c):(function (){var v \x3d reagent.impl.component.get_argv(c);\nvar n \x3d cljs.core.count(v);\nvar G__66311 \x3d n;\nswitch (G__66311) {\ncase (1):\nreturn f.call(c);\n\nbreak;\ncase (2):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\n\nbreak;\ncase (3):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\n\nbreak;\ncase (4):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\n\nbreak;\ncase (5):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\n\nbreak;\ndefault:\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\n\n}\n})());\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 \x3d ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\nreturn (function() { \nvar G__66814__delegate \x3d function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__66814 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__66817__i \x3d 0, G__66817__a \x3d new Array(arguments.length -  0);\nwhile (G__66817__i \x3c G__66817__a.length) {G__66817__a[G__66817__i] \x3d arguments[G__66817__i + 0]; ++G__66817__i;}\n  args \x3d new cljs.core.IndexedSeq(G__66817__a,0,null);\n} \nreturn G__66814__delegate.call(this,args);};\nG__66814.cljs$lang$maxFixedArity \x3d 0;\nG__66814.cljs$lang$applyTo \x3d (function (arglist__66825){\nvar args \x3d cljs.core.seq(arglist__66825);\nreturn G__66814__delegate(args);\n});\nG__66814.cljs$core$IFn$_invoke$arity$variadic \x3d G__66814__delegate;\nreturn G__66814;\n})()\n;})(c,compiler,f,_,res))\n:res);\n(c.reagentRender \x3d f__$1);\n\nvar G__66827 \x3d c;\nvar G__66828 \x3d compiler;\nc \x3d G__66827;\ncompiler \x3d G__66828;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.component_name \x3d (function reagent$impl$component$component_name(c){\nvar or__4223__auto__ \x3d (function (){var G__66320 \x3d c;\nvar G__66320__$1 \x3d (((G__66320 \x3d\x3d null))?null:G__66320.constructor);\nif((G__66320__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__66320__$1.displayName;\n}\n})();\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar G__66326 \x3d c;\nvar G__66326__$1 \x3d (((G__66326 \x3d\x3d null))?null:G__66326.constructor);\nif((G__66326__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__66326__$1.name;\n}\n}\n});\nreagent.impl.component.comp_name \x3d (function reagent$impl$component$comp_name(){\nvar c \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar n \x3d reagent.impl.component.component_name(c);\nif((!(cljs.core.empty_QMARK_(n)))){\nreturn [\x22 (in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22)\x22].join(\x27\x27);\n} else {\nreturn \x22\x22;\n}\n\n});\nreagent.impl.component.do_render \x3d (function reagent$impl$component$do_render(c,compiler){\nvar _STAR_current_component_STAR__orig_val__66327 \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__66328 \x3d c;\n(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__temp_val__66328);\n\ntry{return reagent.impl.component.wrap_render(c,compiler);\n}finally {(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__orig_val__66327);\n}});\nreagent.impl.component.rat_opts \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22no-cache\x22,\x22no-cache\x22,1588056370),true], null);\nreagent.impl.component.custom_wrapper \x3d (function reagent$impl$component$custom_wrapper(key,f){\nvar G__66335 \x3d key;\nvar G__66335__$1 \x3d (((G__66335 instanceof cljs.core.Keyword))?G__66335.fqn:null);\nswitch (G__66335__$1) {\ncase \x22getDefaultProps\x22:\nthrow (new Error(\x22getDefaultProps not supported\x22));\n\nbreak;\ncase \x22getDerivedStateFromProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\nreturn f.call(null,(function (){var temp__5755__auto__ \x3d props.argv;\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn props;\n} else {\nvar a \x3d temp__5755__auto__;\nreturn reagent.impl.component.extract_props(a);\n}\n})(),state);\n});\n\nbreak;\ncase \x22getInitialState\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\n});\n\nbreak;\ncase \x22getSnapshotBeforeUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\n});\n\nbreak;\ncase \x22componentWillReceiveProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \x22UNSAFE_componentWillReceiveProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \x22shouldComponentUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\nvar or__4223__auto__ \x3d reagent.impl.util._STAR_always_update_STAR_;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar c \x3d this;\nvar old_argv \x3d c.props.argv;\nvar new_argv \x3d nextprops.argv;\nvar noargv \x3d (((old_argv \x3d\x3d null)) || ((new_argv \x3d\x3d null)));\nif((f \x3d\x3d null)){\nvar or__4223__auto____$1 \x3d noargv;\nif(or__4223__auto____$1){\nreturn or__4223__auto____$1;\n} else {\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e66353){var e \x3d e66353;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Exception thrown while comparing argv\x27s in shouldComponentUpdate: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(\x27\x27));\n} else {\n}\n\nreturn false;\n}}\n} else {\nif(noargv){\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\n} else {\nreturn f.call(c,c,old_argv,new_argv);\n\n}\n}\n}\n});\n\nbreak;\ncase \x22componentWillUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \x22UNSAFE_componentWillUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \x22componentDidUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\n});\n\nbreak;\ncase \x22componentWillMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22UNSAFE_componentWillMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22componentDidMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22componentWillUnmount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\nvar c \x3d this;\nvar G__66398_66882 \x3d goog.object.get(c,\x22cljsRatom\x22);\nif((G__66398_66882 \x3d\x3d null)){\n} else {\nreagent.ratom.dispose_BANG_(G__66398_66882);\n}\n\nreagent.impl.batching.mark_rendered(c);\n\nif((f \x3d\x3d null)){\nreturn null;\n} else {\nreturn f.call(c,c);\n}\n});\n\nbreak;\ncase \x22componentDidCatch\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\nvar c \x3d this;\nreturn f.call(c,c,error,info);\n});\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nreagent.impl.component.get_wrapper \x3d (function reagent$impl$component$get_wrapper(key,f){\nvar wrap \x3d reagent.impl.component.custom_wrapper(key,f);\nif(cljs.core.truth_((function (){var and__4221__auto__ \x3d wrap;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn f;\n} else {\nreturn and__4221__auto__;\n}\n})())){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)));\n}\n} else {\n}\n\nvar or__4223__auto__ \x3d wrap;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn f;\n}\n});\nreagent.impl.component.obligatory \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22shouldComponentUpdate\x22,\x22shouldComponentUpdate\x22,1795750960),null,new cljs.core.Keyword(null,\x22componentWillUnmount\x22,\x22componentWillUnmount\x22,1573788814),null], null);\nreagent.impl.component.dash_to_method_name \x3d reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\nreagent.impl.component.camelify_map_keys \x3d (function reagent$impl$component$camelify_map_keys(fun_map){\nreturn cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\n});\nreagent.impl.component.add_obligatory \x3d (function reagent$impl$component$add_obligatory(fun_map){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\n});\nreagent.impl.component.wrap_funs \x3d (function reagent$impl$component$wrap_funs(fmap,compiler){\nvar renders_66887 \x3d cljs.core.select_keys(fmap,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383)], null));\nvar render_fun_66888 \x3d cljs.core.first(cljs.core.vals(renders_66887));\nif(cljs.core.not(new cljs.core.Keyword(null,\x22componentFunction\x22,\x22componentFunction\x22,825866104).cljs$core$IFn$_invoke$arity$1(fmap))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22:component-function is no longer supported, use :reagent-render instead.\x22,\x22\\n\x22,\x22(not (:componentFunction fmap))\x22].join(\x27\x27)));\n}\n\nif((cljs.core.count(renders_66887) \x3e (0))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Missing reagent-render\x22,\x22\\n\x22,\x22(pos? (count renders))\x22].join(\x27\x27)));\n}\n\nif(((1) \x3d\x3d\x3d cljs.core.count(renders_66887))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Too many render functions supplied\x22,\x22\\n\x22,\x22(\x3d\x3d 1 (count renders))\x22].join(\x27\x27)));\n}\n\nif(cljs.core.ifn_QMARK_(render_fun_66888)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([render_fun_66888], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? render-fun)\x22].join(\x27\x27)));\n}\n\n\nvar render_fun \x3d (function (){var or__4223__auto__ \x3d new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\n}\n})();\nvar legacy_render \x3d (new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(fmap) \x3d\x3d null);\nvar name \x3d (function (){var or__4223__auto__ \x3d new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar or__4223__auto____$1 \x3d reagent.impl.util.fun_name(render_fun);\nif(cljs.core.truth_(or__4223__auto____$1)){\nreturn or__4223__auto____$1;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\x22reagent\x22));\n}\n}\n})();\nvar fmap__$1 \x3d cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613),legacy_render,new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383),render_fun,new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\nvar c \x3d this;\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.do_render(c,compiler);\n} else {\nvar rat \x3d goog.object.get(c,\x22cljsRatom\x22);\nreagent.impl.batching.mark_rendered(c);\n\nif((rat \x3d\x3d null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.do_render(c,compiler);\n}),c,\x22cljsRatom\x22,reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n})], 0));\n});\nreagent.impl.component.map_to_js \x3d (function reagent$impl$component$map_to_js(m){\nreturn cljs.core.reduce_kv((function (o,k,v){\nvar G__66587 \x3d o;\ngoog.object.set(G__66587,cljs.core.name(k),v);\n\nreturn G__66587;\n}),({}),m);\n});\nreagent.impl.component.cljsify \x3d (function reagent$impl$component$cljsify(body,compiler){\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\n});\nreagent.impl.component.built_in_static_method_names \x3d new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22childContextTypes\x22,\x22childContextTypes\x22,578717991),new cljs.core.Keyword(null,\x22contextTypes\x22,\x22contextTypes\x22,-2023853910),new cljs.core.Keyword(null,\x22contextType\x22,\x22contextType\x22,1033066077),new cljs.core.Keyword(null,\x22getDerivedStateFromProps\x22,\x22getDerivedStateFromProps\x22,-991834739),new cljs.core.Keyword(null,\x22getDerivedStateFromError\x22,\x22getDerivedStateFromError\x22,166658477)], null);\n/**\n * Creates JS class based on provided Clojure map.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n *   Constructor function is defined using key `:getInitialState`.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.impl.component.create_class \x3d (function reagent$impl$component$create_class(body,compiler){\nif(cljs.core.map_QMARK_(body)){\n} else {\nthrow (new Error(\x22Assert failed: (map? body)\x22));\n}\n\nvar body__$1 \x3d reagent.impl.component.cljsify(body,compiler);\nvar methods$ \x3d reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601),new cljs.core.Keyword(null,\x22getInitialState\x22,\x22getInitialState\x22,1541760916),new cljs.core.Keyword(null,\x22constructor\x22,\x22constructor\x22,-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383),reagent.impl.component.built_in_static_method_names], 0)));\nvar static_methods \x3d reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\nvar display_name \x3d new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar get_initial_state \x3d new cljs.core.Keyword(null,\x22getInitialState\x22,\x22getInitialState\x22,1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar construct \x3d new cljs.core.Keyword(null,\x22constructor\x22,\x22constructor\x22,-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar cmp \x3d (function (props,context,updater){\nvar this$ \x3d this;\nmodule$node_modules$react$index.Component.call(this$,props,context,updater);\n\nif(cljs.core.truth_(construct)){\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\n} else {\n}\n\nif(cljs.core.truth_(get_initial_state)){\n(this$.state \x3d (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\n} else {\n}\n\n(this$.cljsMountOrder \x3d reagent.impl.batching.next_mount_count());\n\nreturn this$;\n});\ngoog.object.extend(cmp.prototype,module$node_modules$react$index.Component.prototype,methods$);\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.render \x3d new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.reagentRender \x3d new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.cljsLegacyRender \x3d new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\ngoog.object.extend(cmp,module$node_modules$react$index.Component,static_methods);\n\nif(cljs.core.truth_(display_name)){\n(cmp.displayName \x3d display_name);\n\n(cmp.cljs$lang$ctorStr \x3d display_name);\n\n(cmp.cljs$lang$ctorPrWriter \x3d (function (this$,writer,opt){\nreturn cljs.core._write(writer,display_name);\n}));\n} else {\n}\n\n(cmp.cljs$lang$type \x3d true);\n\n(cmp.prototype.constructor \x3d cmp);\n\nreturn cmp;\n});\nreagent.impl.component.cached_react_class \x3d (function reagent$impl$component$cached_react_class(compiler,c){\nreturn goog.object.get(c,reagent.impl.protocols.get_id(compiler));\n});\nreagent.impl.component.cache_react_class \x3d (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\ngoog.object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\n\nreturn constructor$;\n});\nreagent.impl.component.fn_to_class \x3d (function reagent$impl$component$fn_to_class(compiler,f){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)));\n}\n\nif((!((!(((reagent.impl.component.react_class_QMARK_(f)) \x26\x26 ((!(reagent.impl.component.reagent_class_QMARK_(f)))))))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Using native React classes directly in Hiccup forms \x22,\x22is not supported. Use create-element or \x22,\x22adapt-react-class instead: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4223__auto__ \x3d reagent.impl.util.fun_name(f);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn f;\n}\n})()),reagent.impl.component.comp_name()].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nif(reagent.impl.component.reagent_class_QMARK_(f)){\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\n} else {\nvar spec \x3d cljs.core.meta(f);\nvar withrender \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\x22reagent-render\x22,\x22reagent-render\x22,-985383853),f);\nvar res \x3d reagent.impl.component.create_class(withrender,compiler);\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\n}\n});\nreagent.impl.component.as_class \x3d (function reagent$impl$component$as_class(tag,compiler){\nvar temp__5755__auto__ \x3d reagent.impl.component.cached_react_class(compiler,tag);\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn reagent.impl.component.fn_to_class(compiler,tag);\n} else {\nvar cached_class \x3d temp__5755__auto__;\nreturn cached_class;\n}\n});\nreagent.impl.component.reactify_component \x3d (function reagent$impl$component$reactify_component(comp,compiler){\nif(reagent.impl.component.react_class_QMARK_(comp)){\nreturn comp;\n} else {\nreturn reagent.impl.component.as_class(comp,compiler);\n}\n});\nreagent.impl.component.functional_wrap_render \x3d (function reagent$impl$component$functional_wrap_render(compiler,c){\nwhile(true){\nvar f \x3d c.reagentRender;\nvar _ \x3d ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)))})());\nvar argv \x3d c.argv;\nvar res \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 \x3d ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\nreturn (function() { \nvar G__66900__delegate \x3d function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__66900 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__66901__i \x3d 0, G__66901__a \x3d new Array(arguments.length -  0);\nwhile (G__66901__i \x3c G__66901__a.length) {G__66901__a[G__66901__i] \x3d arguments[G__66901__i + 0]; ++G__66901__i;}\n  args \x3d new cljs.core.IndexedSeq(G__66901__a,0,null);\n} \nreturn G__66900__delegate.call(this,args);};\nG__66900.cljs$lang$maxFixedArity \x3d 0;\nG__66900.cljs$lang$applyTo \x3d (function (arglist__66902){\nvar args \x3d cljs.core.seq(arglist__66902);\nreturn G__66900__delegate(args);\n});\nG__66900.cljs$core$IFn$_invoke$arity$variadic \x3d G__66900__delegate;\nreturn G__66900;\n})()\n;})(compiler,c,f,_,argv,res))\n:res);\n(c.reagentRender \x3d f__$1);\n\nvar G__66904 \x3d compiler;\nvar G__66905 \x3d c;\ncompiler \x3d G__66904;\nc \x3d G__66905;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.functional_do_render \x3d (function reagent$impl$component$functional_do_render(compiler,c){\nvar _STAR_current_component_STAR__orig_val__66721 \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__66722 \x3d c;\n(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__temp_val__66722);\n\ntry{return reagent.impl.component.functional_wrap_render(compiler,c);\n}finally {(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__orig_val__66721);\n}});\nreagent.impl.component.functional_render \x3d (function reagent$impl$component$functional_render(compiler,jsprops){\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\n} else {\nvar argv \x3d jsprops.argv;\nvar tag \x3d jsprops.reagentRender;\nvar vec__66729 \x3d module$node_modules$react$index.useState((0));\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66729,(0),null);\nvar update_count \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66729,(1),null);\nvar state_ref \x3d module$node_modules$react$index.useRef();\nvar ___$1 \x3d (cljs.core.truth_(state_ref.current)?null:(function (){var obj \x3d ({});\n(obj.forceUpdate \x3d (function (){\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\n}));\n\n(obj.cljsMountOrder \x3d reagent.impl.batching.next_mount_count());\n\n(obj.constructor \x3d tag);\n\n(obj.reagentRender \x3d tag);\n\nreturn (state_ref.current \x3d obj);\n})());\nvar reagent_state \x3d state_ref.current;\nvar rat \x3d goog.object.get(reagent_state,\x22cljsRatom\x22);\nmodule$node_modules$react$index.useEffect((function reagent$impl$component$functional_render_$_mount(){\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\nvar G__66733 \x3d goog.object.get(reagent_state,\x22cljsRatom\x22);\nif((G__66733 \x3d\x3d null)){\nreturn null;\n} else {\nreturn reagent.ratom.dispose_BANG_(G__66733);\n}\n});\n}),[]);\n\n(reagent_state.argv \x3d argv);\n\nreagent.impl.batching.mark_rendered(reagent_state);\n\nif((rat \x3d\x3d null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\n}),reagent_state,\x22cljsRatom\x22,reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n});\nreagent.impl.component.functional_render_memo_fn \x3d (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\nvar old_argv \x3d prev_props.argv;\nvar new_argv \x3d next_props.argv;\nvar and__4221__auto__ \x3d reagent.impl.util._STAR_always_update_STAR_ \x3d\x3d\x3d false;\nif(and__4221__auto__){\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e66739){var e \x3d e66739;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Exception thrown while comparing argv\x27s in shouldComponentUpdate: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(\x27\x27));\n} else {\n}\n\nreturn false;\n}} else {\nreturn and__4221__auto__;\n}\n});\n/**\n * Create copy of functional-render with displayName set to name of the\n *   original Reagent component.\n */\nreagent.impl.component.functional_render_fn \x3d (function reagent$impl$component$functional_render_fn(compiler,tag){\nvar or__4223__auto__ \x3d reagent.impl.component.cached_react_class(compiler,tag);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar f \x3d (function (jsprops){\nreturn reagent.impl.component.functional_render(compiler,jsprops);\n});\nvar _ \x3d (f.displayName \x3d reagent.impl.util.fun_name(tag));\nvar f__$1 \x3d module$node_modules$react$index.memo(f,reagent.impl.component.functional_render_memo_fn);\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\n\nreturn f__$1;\n}\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.input.js", true , "goog.provide(\x27reagent.impl.input\x27);\nreagent.impl.input.these_inputs_have_selection_api \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x22url\x22,null,\x22tel\x22,null,\x22text\x22,null,\x22textarea\x22,null,\x22password\x22,null,\x22search\x22,null], null), null);\nreagent.impl.input.has_selection_api_QMARK_ \x3d (function reagent$impl$input$has_selection_api_QMARK_(input_type){\nreturn cljs.core.contains_QMARK_(reagent.impl.input.these_inputs_have_selection_api,input_type);\n});\nreagent.impl.input.input_node_set_value \x3d (function reagent$impl$input$input_node_set_value(node,rendered_value,dom_value,component,p__66925){\nvar map__66926 \x3d p__66925;\nvar map__66926__$1 \x3d cljs.core.__destructure_map(map__66926);\nvar on_write \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66926__$1,new cljs.core.Keyword(null,\x22on-write\x22,\x22on-write\x22,31519475));\nif((!((((node \x3d\x3d\x3d document.activeElement)) \x26\x26 (((reagent.impl.input.has_selection_api_QMARK_(node.type)) \x26\x26 (((typeof rendered_value \x3d\x3d\x3d \x27string\x27) \x26\x26 (typeof dom_value \x3d\x3d\x3d \x27string\x27))))))))){\n(component.cljsDOMValue \x3d rendered_value);\n\n(node.value \x3d rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\nreturn null;\n}\n} else {\nvar node_value \x3d node.value;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\nreturn reagent.impl.batching.do_after_render((function (){\nreturn (reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.input.input_component_set_value.call(null,component));\n}));\n} else {\nvar existing_offset_from_end \x3d (cljs.core.count(node_value) - node.selectionStart);\nvar new_cursor_offset \x3d (cljs.core.count(rendered_value) - existing_offset_from_end);\n(component.cljsDOMValue \x3d rendered_value);\n\n(node.value \x3d rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\n}\n\n(node.selectionStart \x3d new_cursor_offset);\n\nreturn (node.selectionEnd \x3d new_cursor_offset);\n}\n}\n});\nreagent.impl.input.input_component_set_value \x3d (function reagent$impl$input$input_component_set_value(this$){\nif(cljs.core.truth_(this$.cljsInputLive)){\n(this$.cljsInputDirty \x3d false);\n\nvar rendered_value \x3d this$.cljsRenderedValue;\nvar dom_value \x3d this$.cljsDOMValue;\nvar node \x3d this$.inputEl;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\nreturn reagent.impl.input.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_handle_change \x3d (function reagent$impl$input$input_handle_change(this$,on_change,e){\n(this$.cljsDOMValue \x3d e.target.value);\n\nif(cljs.core.truth_(this$.cljsInputDirty)){\n} else {\n(this$.cljsInputDirty \x3d true);\n\nreagent.impl.batching.do_after_render((function (){\nreturn reagent.impl.input.input_component_set_value(this$);\n}));\n}\n\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\n});\nreagent.impl.input.input_render_setup \x3d (function reagent$impl$input$input_render_setup(this$,jsprops){\nif(cljs.core.truth_((function (){var and__4221__auto__ \x3d (!((jsprops \x3d\x3d null)));\nif(and__4221__auto__){\nvar and__4221__auto____$1 \x3d jsprops.hasOwnProperty(\x22onChange\x22);\nif(cljs.core.truth_(and__4221__auto____$1)){\nreturn jsprops.hasOwnProperty(\x22value\x22);\n} else {\nreturn and__4221__auto____$1;\n}\n} else {\nreturn and__4221__auto__;\n}\n})())){\nvar v \x3d jsprops.value;\nvar value \x3d (((v \x3d\x3d null))?\x22\x22:v);\nvar on_change \x3d jsprops.onChange;\nvar original_ref_fn \x3d jsprops.ref;\nif(cljs.core.truth_(this$.cljsInputLive)){\n} else {\n(this$.cljsInputLive \x3d true);\n\n(this$.cljsDOMValue \x3d value);\n}\n\nif(cljs.core.truth_(this$.reagentRefFn)){\n} else {\n(this$.reagentRefFn \x3d ((cljs.core.fn_QMARK_(original_ref_fn))?(function (el){\n(this$.inputEl \x3d el);\n\nreturn (original_ref_fn.cljs$core$IFn$_invoke$arity$1 ? original_ref_fn.cljs$core$IFn$_invoke$arity$1(el) : original_ref_fn.call(null,el));\n}):(cljs.core.truth_((function (){var and__4221__auto__ \x3d original_ref_fn;\nif(cljs.core.truth_(and__4221__auto__)){\nreturn original_ref_fn.hasOwnProperty(\x22current\x22);\n} else {\nreturn and__4221__auto__;\n}\n})())?(function (el){\n(this$.inputEl \x3d el);\n\nreturn (original_ref_fn.current \x3d el);\n}):(function (el){\nreturn (this$.inputEl \x3d el);\n})\n)));\n}\n\n(this$.cljsRenderedValue \x3d value);\n\ndelete jsprops[\x22value\x22];\n\n(jsprops.defaultValue \x3d value);\n\n(jsprops.onChange \x3d (function (p1__66944_SHARP_){\nreturn reagent.impl.input.input_handle_change(this$,on_change,p1__66944_SHARP_);\n}));\n\nreturn (jsprops.ref \x3d this$.reagentRefFn);\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_unmount \x3d (function reagent$impl$input$input_unmount(this$){\nreturn (this$.cljsInputLive \x3d null);\n});\nreagent.impl.input.input_component_QMARK_ \x3d (function reagent$impl$input$input_component_QMARK_(x){\nvar G__66958 \x3d x;\nswitch (G__66958) {\ncase \x22input\x22:\ncase \x22textarea\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\nreagent.impl.input.input_spec \x3d new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22display-name\x22,\x22display-name\x22,694513143),\x22ReagentInput\x22,new cljs.core.Keyword(null,\x22component-did-update\x22,\x22component-did-update\x22,-1468549173),reagent.impl.input.input_component_set_value,new cljs.core.Keyword(null,\x22component-will-unmount\x22,\x22component-will-unmount\x22,-2058314698),reagent.impl.input.input_unmount,new cljs.core.Keyword(null,\x22reagent-render\x22,\x22reagent-render\x22,-985383853),(function (argv,component,jsprops,first_child,compiler){\nvar this$ \x3d reagent.impl.component._STAR_current_component_STAR_;\nreagent.impl.input.input_render_setup(this$,jsprops);\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n})], null);\n");
SHADOW_ENV.evalLoad("reagent.impl.template.js", true , "goog.provide(\x27reagent.impl.template\x27);\nvar module$node_modules$react$index\x3dshadow.js.require(\x22module$node_modules$react$index\x22, {});\n/**\n * Regular expression that parses a CSS-style id and class\n *           from a tag name.\n */\nreagent.impl.template.re_tag \x3d /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\n\n/**\n* @constructor\n*/\nreagent.impl.template.NativeWrapper \x3d (function (tag,id,className){\nthis.tag \x3d tag;\nthis.id \x3d id;\nthis.className \x3d className;\n});\n\n(reagent.impl.template.NativeWrapper.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22className\x22,\x22className\x22,-342755530,null)], null);\n}));\n\n(reagent.impl.template.NativeWrapper.cljs$lang$type \x3d true);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr \x3d \x22reagent.impl.template/NativeWrapper\x22);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.impl.template/NativeWrapper\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/NativeWrapper.\n */\nreagent.impl.template.__GT_NativeWrapper \x3d (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\n});\n\nreagent.impl.template.adapt_react_class \x3d (function reagent$impl$template$adapt_react_class(c){\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\n});\nreagent.impl.template.hiccup_tag_QMARK_ \x3d (function reagent$impl$template$hiccup_tag_QMARK_(x){\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x \x3d\x3d\x3d \x27string\x27));\n});\nreagent.impl.template.valid_tag_QMARK_ \x3d (function reagent$impl$template$valid_tag_QMARK_(x){\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (((cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)))));\n});\nreagent.impl.template.prop_name_cache \x3d ({\x22class\x22: \x22className\x22, \x22for\x22: \x22htmlFor\x22, \x22charset\x22: \x22charSet\x22});\nreagent.impl.template.cache_get \x3d (function reagent$impl$template$cache_get(o,k){\nif(o.hasOwnProperty(k)){\nreturn goog.object.get(o,k);\n} else {\nreturn null;\n}\n});\nreagent.impl.template.cached_prop_name \x3d (function reagent$impl$template$cached_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5755__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\nif((temp__5755__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ \x3d temp__5755__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.kv_conv \x3d (function reagent$impl$template$kv_conv(o,k,v){\nvar G__67023 \x3d o;\ngoog.object.set(G__67023,reagent.impl.template.cached_prop_name(k),(reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\n\nreturn G__67023;\n});\nreagent.impl.template.convert_prop_value \x3d (function reagent$impl$template$convert_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__67228__delegate \x3d function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__67228 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__67232__i \x3d 0, G__67232__a \x3d new Array(arguments.length -  0);\nwhile (G__67232__i \x3c G__67232__a.length) {G__67232__a[G__67232__i] \x3d arguments[G__67232__i + 0]; ++G__67232__i;}\n  args \x3d new cljs.core.IndexedSeq(G__67232__a,0,null);\n} \nreturn G__67228__delegate.call(this,args);};\nG__67228.cljs$lang$maxFixedArity \x3d 0;\nG__67228.cljs$lang$applyTo \x3d (function (arglist__67233){\nvar args \x3d cljs.core.seq(arglist__67233);\nreturn G__67228__delegate(args);\n});\nG__67228.cljs$core$IFn$_invoke$arity$variadic \x3d G__67228__delegate;\nreturn G__67228;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.custom_prop_name_cache \x3d ({});\nreagent.impl.template.cached_custom_prop_name \x3d (function reagent$impl$template$cached_custom_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5755__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\nif((temp__5755__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ \x3d temp__5755__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.custom_kv_conv \x3d (function reagent$impl$template$custom_kv_conv(o,k,v){\nvar G__67033 \x3d o;\ngoog.object.set(G__67033,reagent.impl.template.cached_custom_prop_name(k),reagent.impl.template.convert_prop_value(v));\n\nreturn G__67033;\n});\nreagent.impl.template.convert_custom_prop_value \x3d (function reagent$impl$template$convert_custom_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__67240__delegate \x3d function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__67240 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__67241__i \x3d 0, G__67241__a \x3d new Array(arguments.length -  0);\nwhile (G__67241__i \x3c G__67241__a.length) {G__67241__a[G__67241__i] \x3d arguments[G__67241__i + 0]; ++G__67241__i;}\n  args \x3d new cljs.core.IndexedSeq(G__67241__a,0,null);\n} \nreturn G__67240__delegate.call(this,args);};\nG__67240.cljs$lang$maxFixedArity \x3d 0;\nG__67240.cljs$lang$applyTo \x3d (function (arglist__67243){\nvar args \x3d cljs.core.seq(arglist__67243);\nreturn G__67240__delegate(args);\n});\nG__67240.cljs$core$IFn$_invoke$arity$variadic \x3d G__67240__delegate;\nreturn G__67240;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\n/**\n * Takes the id and class from tag keyword, and adds them to the\n *   other props. Parsed tag is JS object with :id and :class properties.\n */\nreagent.impl.template.set_id_class \x3d (function reagent$impl$template$set_id_class(props,id_class){\nvar id \x3d id_class.id;\nvar class$ \x3d id_class.className;\nvar G__67041 \x3d props;\nvar G__67041__$1 \x3d (((((!((id \x3d\x3d null)))) \x26\x26 ((new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(props) \x3d\x3d null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__67041,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),id):G__67041);\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__67041__$1,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,(function (){var or__4223__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22className\x22,\x22className\x22,-1983287057).cljs$core$IFn$_invoke$arity$1(props);\n}\n})()));\n} else {\nreturn G__67041__$1;\n}\n});\nreagent.impl.template.convert_props \x3d (function reagent$impl$template$convert_props(props,id_class){\nvar class$ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nvar props__$1 \x3d reagent.impl.template.set_id_class((function (){var G__67042 \x3d props;\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__67042,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\n} else {\nreturn G__67042;\n}\n})(),id_class);\nif(cljs.core.truth_(id_class.custom)){\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\n} else {\nreturn reagent.impl.template.convert_prop_value(props__$1);\n}\n});\nreagent.impl.template.make_element \x3d (function reagent$impl$template$make_element(this$,argv,component,jsprops,first_child){\nvar G__67044 \x3d (cljs.core.count(argv) - first_child);\nswitch (G__67044) {\ncase (0):\nreturn module$node_modules$react$index.createElement(component,jsprops);\n\nbreak;\ncase (1):\nreturn module$node_modules$react$index.createElement(component,jsprops,reagent.impl.protocols.as_element(this$,cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\n\nbreak;\ndefault:\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\nif((k \x3e\x3d first_child)){\na.push(reagent.impl.protocols.as_element(this$,v));\n} else {\n}\n\nreturn a;\n}),[component,jsprops],argv));\n\n}\n});\n\n/**\n* @constructor\n*/\nreagent.impl.template.HiccupTag \x3d (function (tag,id,className,custom){\nthis.tag \x3d tag;\nthis.id \x3d id;\nthis.className \x3d className;\nthis.custom \x3d custom;\n});\n\n(reagent.impl.template.HiccupTag.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22className\x22,\x22className\x22,-342755530,null),new cljs.core.Symbol(null,\x22custom\x22,\x22custom\x22,1980683475,null)], null);\n}));\n\n(reagent.impl.template.HiccupTag.cljs$lang$type \x3d true);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr \x3d \x22reagent.impl.template/HiccupTag\x22);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.impl.template/HiccupTag\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/HiccupTag.\n */\nreagent.impl.template.__GT_HiccupTag \x3d (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\n});\n\nreagent.impl.template.parse_tag \x3d (function reagent$impl$template$parse_tag(hiccup_tag){\nvar vec__67059 \x3d cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67059,(0),null);\nvar id \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67059,(1),null);\nvar className \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67059,(2),null);\nvar className__$1 \x3d (((className \x3d\x3d null))?null:clojure.string.replace(className,/\\./,\x22 \x22));\nif(cljs.core.truth_(tag)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Invalid tag: \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\x22\x27\x22,reagent.impl.component.comp_name()].join(\x27\x27),\x22\\n\x22,\x22tag\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\x22-\x22)));\n});\nreagent.impl.template.reag_element \x3d (function reagent$impl$template$reag_element(tag,v,compiler){\nvar c \x3d reagent.impl.component.as_class(tag,compiler);\nvar jsprops \x3d ({});\n(jsprops.argv \x3d v);\n\nvar temp__5757__auto___67316 \x3d reagent.impl.util.react_key_from_vec(v);\nif((temp__5757__auto___67316 \x3d\x3d null)){\n} else {\nvar key_67318 \x3d temp__5757__auto___67316;\n(jsprops.key \x3d key_67318);\n}\n\nreturn module$node_modules$react$index.createElement(c,jsprops);\n});\nreagent.impl.template.function_element \x3d (function reagent$impl$template$function_element(tag,v,first_arg,compiler){\nvar jsprops \x3d ({});\n(jsprops.reagentRender \x3d tag);\n\n(jsprops.argv \x3d cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_arg));\n\nvar temp__5757__auto___67321 \x3d reagent.impl.util.react_key_from_vec(v);\nif((temp__5757__auto___67321 \x3d\x3d null)){\n} else {\nvar key_67324 \x3d temp__5757__auto___67321;\n(jsprops.key \x3d key_67324);\n}\n\nreturn module$node_modules$react$index.createElement(reagent.impl.component.functional_render_fn(compiler,tag),jsprops);\n});\n/**\n * If given tag is a Class, use it as a class,\n *   else wrap in Reagent function wrapper.\n */\nreagent.impl.template.maybe_function_element \x3d (function reagent$impl$template$maybe_function_element(tag,v,compiler){\nif(reagent.impl.component.react_class_QMARK_(tag)){\nreturn reagent.impl.template.reag_element(tag,v,compiler);\n} else {\nreturn reagent.impl.template.function_element(tag,v,(1),compiler);\n}\n});\nreagent.impl.template.fragment_element \x3d (function reagent$impl$template$fragment_element(argv,compiler){\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\nvar hasprops \x3d (((props \x3d\x3d null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops \x3d (function (){var or__4223__auto__ \x3d reagent.impl.template.convert_prop_value(((hasprops)?props:null));\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child \x3d ((1) + ((hasprops)?(1):(0)));\nvar temp__5757__auto___67339 \x3d reagent.impl.util.react_key_from_vec(argv);\nif((temp__5757__auto___67339 \x3d\x3d null)){\n} else {\nvar key_67340 \x3d temp__5757__auto___67339;\n(jsprops.key \x3d key_67340);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,module$node_modules$react$index.Fragment,jsprops,first_child);\n});\nreagent.impl.template.tag_name_cache \x3d ({});\nreagent.impl.template.cached_parse \x3d (function reagent$impl$template$cached_parse(this$,x,_){\nvar temp__5755__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\nif((temp__5755__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.template.parse_tag(x);\ngoog.object.set(reagent.impl.template.tag_name_cache,x,v);\n\nreturn v;\n} else {\nvar s \x3d temp__5755__auto__;\nreturn s;\n}\n});\nreagent.impl.template.native_element \x3d (function reagent$impl$template$native_element(parsed,argv,first,compiler){\nvar component \x3d parsed.tag;\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\nvar hasprops \x3d (((props \x3d\x3d null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops \x3d (function (){var or__4223__auto__ \x3d reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child \x3d (first + ((hasprops)?(1):(0)));\nif(reagent.impl.input.input_component_QMARK_(component)){\nvar react_key \x3d reagent.impl.util.get_react_key(props);\nvar input_class \x3d (function (){var or__4223__auto__ \x3d compiler.reagentInput;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nvar x \x3d reagent.impl.component.create_class(reagent.impl.input.input_spec,compiler);\n(compiler.reagentInput \x3d x);\n\nreturn x;\n}\n})();\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.with_meta(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_class,argv,component,jsprops,first_child,compiler], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(react_key)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),react_key], null):null),cljs.core.meta(argv)], 0))));\n} else {\nvar temp__5757__auto___67362 \x3d reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5757__auto___67362 \x3d\x3d null)){\n} else {\nvar key_67363 \x3d temp__5757__auto___67362;\n(jsprops.key \x3d key_67363);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n}\n});\nreagent.impl.template.raw_element \x3d (function reagent$impl$template$raw_element(comp,argv,compiler){\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(2),null);\nvar jsprops \x3d (function (){var or__4223__auto__ \x3d props;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn ({});\n}\n})();\nvar temp__5757__auto___67368 \x3d reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5757__auto___67368 \x3d\x3d null)){\n} else {\nvar key_67373 \x3d temp__5757__auto___67368;\n(jsprops.key \x3d key_67373);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,comp,jsprops,(3));\n});\nreagent.impl.template.expand_seq \x3d (function reagent$impl$template$expand_seq(s,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__67103_SHARP_){\nreturn reagent.impl.protocols.as_element(compiler,p1__67103_SHARP_);\n}),s));\n});\nreagent.impl.template.expand_seq_dev \x3d (function reagent$impl$template$expand_seq_dev(s,o,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\nif(((cljs.core.vector_QMARK_(val)) \x26\x26 ((reagent.impl.util.react_key_from_vec(val) \x3d\x3d null)))){\n(o.no_key \x3d true);\n} else {\n}\n\nreturn reagent.impl.protocols.as_element(compiler,val);\n}),s));\n});\nreagent.impl.template.expand_seq_check \x3d (function reagent$impl$template$expand_seq_check(x,compiler){\nvar ctx \x3d ({});\nvar vec__67124 \x3d reagent.ratom.check_derefs((function (){\nreturn reagent.impl.template.expand_seq_dev(x,ctx,compiler);\n}));\nvar res \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67124,(0),null);\nvar derefed \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67124,(1),null);\nif(cljs.core.truth_(derefed)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Reactive deref not supported in lazy seq, \x22,\x22it should be wrapped in doall\x22], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(ctx.no_key)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Every element in a seq should have a unique :key\x22], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nreturn res;\n});\nreagent.impl.template.hiccup_element \x3d (function reagent$impl$template$hiccup_element(v,compiler){\nwhile(true){\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nvar n \x3d cljs.core.name(tag);\nvar pos \x3d n.indexOf(\x22\x3e\x22);\nvar G__67148 \x3d pos;\nswitch (G__67148) {\ncase (-1):\nreturn reagent.impl.template.native_element(reagent.impl.protocols.parse_tag(compiler,n,tag),v,(1),compiler);\n\nbreak;\ncase (0):\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x3e\x22,n)){\nreturn null;\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid Hiccup tag\x22], 0)),\x22\\n\x22,\x22(\x3d \\\x22\x3e\\\x22 n)\x22].join(\x27\x27)));\n}\n\nbreak;\ndefault:\nvar G__67381 \x3d cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\nvar G__67382 \x3d compiler;\nv \x3d G__67381;\ncompiler \x3d G__67382;\ncontinue;\n\n}\nbreak;\n}\n});\nreagent.impl.template.vec_to_elem \x3d (function reagent$impl$template$vec_to_elem(v,compiler,fn_to_element){\nif((compiler \x3d\x3d null)){\nconsole.error(\x22vec-to-elem\x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)));\n} else {\n}\n\nif((cljs.core.count(v) \x3e (0))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Hiccup form should not be empty\x22], 0)),\x22\\n\x22,\x22(pos? (count v))\x22].join(\x27\x27)));\n}\n\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid Hiccup form\x22], 0)),\x22\\n\x22,\x22(valid-tag? tag)\x22].join(\x27\x27)));\n}\n\nvar G__67159 \x3d tag;\nvar G__67159__$1 \x3d (((G__67159 instanceof cljs.core.Keyword))?G__67159.fqn:null);\nswitch (G__67159__$1) {\ncase \x22\x3e\x22:\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),null,null,null),v,(2),compiler);\n\nbreak;\ncase \x22r\x3e\x22:\nreturn reagent.impl.template.raw_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,compiler);\n\nbreak;\ncase \x22f\x3e\x22:\nreturn reagent.impl.template.function_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,(2),compiler);\n\nbreak;\ncase \x22\x3c\x3e\x22:\nreturn reagent.impl.template.fragment_element(v,compiler);\n\nbreak;\ndefault:\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\nreturn reagent.impl.template.hiccup_element(v,compiler);\n} else {\nif((tag instanceof reagent.impl.template.NativeWrapper)){\nreturn reagent.impl.template.native_element(tag,v,(1),compiler);\n} else {\nreturn (fn_to_element.cljs$core$IFn$_invoke$arity$3 ? fn_to_element.cljs$core$IFn$_invoke$arity$3(tag,v,compiler) : fn_to_element.call(null,tag,v,compiler));\n\n}\n}\n\n}\n});\nreagent.impl.template.as_element \x3d (function reagent$impl$template$as_element(this$,x,fn_to_element){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn reagent.impl.template.vec_to_elem(x,this$,fn_to_element);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn reagent.impl.template.expand_seq_check(x,this$);\n\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n} else {\nreturn x;\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.create_compiler \x3d (function reagent$impl$template$create_compiler(opts){\nvar id \x3d cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();\nvar fn_to_element \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22function-components\x22,\x22function-components\x22,1492814963).cljs$core$IFn$_invoke$arity$1(opts))?reagent.impl.template.maybe_function_element:reagent.impl.template.reag_element);\nvar parse_fn \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\x22parse-tag\x22,\x22parse-tag\x22,1427313738),reagent.impl.template.cached_parse);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.template !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.template.t_reagent$impl$template67165 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {reagent.impl.protocols.Compiler}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.impl.template.t_reagent$impl$template67165 \x3d (function (opts,id,fn_to_element,parse_fn,meta67166){\nthis.opts \x3d opts;\nthis.id \x3d id;\nthis.fn_to_element \x3d fn_to_element;\nthis.parse_fn \x3d parse_fn;\nthis.meta67166 \x3d meta67166;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393216;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.impl.template.t_reagent$impl$template67165.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_67167,meta67166__$1){\nvar self__ \x3d this;\nvar _67167__$1 \x3d this;\nreturn (new reagent.impl.template.t_reagent$impl$template67165(self__.opts,self__.id,self__.fn_to_element,self__.parse_fn,meta67166__$1));\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_67167){\nvar self__ \x3d this;\nvar _67167__$1 \x3d this;\nreturn self__.meta67166;\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.reagent$impl$protocols$Compiler$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.reagent$impl$protocols$Compiler$get_id$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn self__.id;\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.reagent$impl$protocols$Compiler$parse_tag$arity$3 \x3d (function (this$,tag_name,tag_value){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (self__.parse_fn.cljs$core$IFn$_invoke$arity$3 ? self__.parse_fn.cljs$core$IFn$_invoke$arity$3(this$__$1,tag_name,tag_value) : self__.parse_fn.call(null,this$__$1,tag_name,tag_value));\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.reagent$impl$protocols$Compiler$as_element$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.impl.template.as_element(this$__$1,x,self__.fn_to_element);\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.prototype.reagent$impl$protocols$Compiler$make_element$arity$5 \x3d (function (this$,argv,component,jsprops,first_child){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.impl.template.make_element(this$__$1,argv,component,jsprops,first_child);\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22fn-to-element\x22,\x22fn-to-element\x22,-1764467095,null),new cljs.core.Symbol(null,\x22parse-fn\x22,\x22parse-fn\x22,-836029424,null),new cljs.core.Symbol(null,\x22meta67166\x22,\x22meta67166\x22,2131376922,null)], null);\n}));\n\n(reagent.impl.template.t_reagent$impl$template67165.cljs$lang$type \x3d true);\n\n(reagent.impl.template.t_reagent$impl$template67165.cljs$lang$ctorStr \x3d \x22reagent.impl.template/t_reagent$impl$template67165\x22);\n\n(reagent.impl.template.t_reagent$impl$template67165.cljs$lang$ctorPrWriter \x3d (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\nreturn cljs.core._write(writer__4462__auto__,\x22reagent.impl.template/t_reagent$impl$template67165\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/t_reagent$impl$template67165.\n */\nreagent.impl.template.__GT_t_reagent$impl$template67165 \x3d (function reagent$impl$template$create_compiler_$___GT_t_reagent$impl$template67165(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta67166){\nreturn (new reagent.impl.template.t_reagent$impl$template67165(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta67166));\n});\n\n}\n\nreturn (new reagent.impl.template.t_reagent$impl$template67165(opts,id,fn_to_element,parse_fn,cljs.core.PersistentArrayMap.EMPTY));\n});\nreagent.impl.template.default_compiler_STAR_ \x3d reagent.impl.template.create_compiler(cljs.core.PersistentArrayMap.EMPTY);\nreagent.impl.template.default_compiler \x3d reagent.impl.template.default_compiler_STAR_;\nreagent.impl.template.set_default_compiler_BANG_ \x3d (function reagent$impl$template$set_default_compiler_BANG_(compiler){\nreturn (reagent.impl.template.default_compiler \x3d compiler);\n});\n");
SHADOW_ENV.evalLoad("reagent.core.js", true , "goog.provide(\x27reagent.core\x27);\nvar module$node_modules$react$index\x3dshadow.js.require(\x22module$node_modules$react$index\x22, {});\nreagent.core.is_client \x3d reagent.impl.util.is_client;\n/**\n * Create a native React element, by calling React.createElement directly.\n * \n *   That means the second argument must be a javascript object (or nil), and\n *   that any Reagent hiccup forms must be processed with as-element. For example\n *   like this:\n * \n *   ```cljs\n *   (r/create-element \x22div\x22 #js{:className \x22foo\x22}\n *  \x22Hi \x22 (r/as-element [:strong \x22world!\x22])\n *   ```\n * \n *   which is equivalent to\n * \n *   ```cljs\n *   [:div.foo \x22Hi\x22 [:strong \x22world!\x22]]\n *   ```\n */\nreagent.core.create_element \x3d (function reagent$core$create_element(var_args){\nvar G__67356 \x3d arguments.length;\nswitch (G__67356) {\ncase 1:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___67811 \x3d arguments.length;\nvar i__4830__auto___67812 \x3d (0);\nwhile(true){\nif((i__4830__auto___67812 \x3c len__4829__auto___67811)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___67812]));\n\nvar G__67813 \x3d (i__4830__auto___67812 + (1));\ni__4830__auto___67812 \x3d G__67813;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((3)),(0),null));\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$1 \x3d (function (type){\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$2(type,null);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,props){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn module$node_modules$react$index.createElement(type,props);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$3 \x3d (function (type,props,child){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn module$node_modules$react$index.createElement(type,props,child);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$variadic \x3d (function (type,props,child,children){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(module$node_modules$react$index.createElement,type,props,child,children);\n}));\n\n/** @this {Function} */\n(reagent.core.create_element.cljs$lang$applyTo \x3d (function (seq67350){\nvar G__67352 \x3d cljs.core.first(seq67350);\nvar seq67350__$1 \x3d cljs.core.next(seq67350);\nvar G__67353 \x3d cljs.core.first(seq67350__$1);\nvar seq67350__$2 \x3d cljs.core.next(seq67350__$1);\nvar G__67354 \x3d cljs.core.first(seq67350__$2);\nvar seq67350__$3 \x3d cljs.core.next(seq67350__$2);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67352,G__67353,G__67354,seq67350__$3);\n}));\n\n(reagent.core.create_element.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Turns a vector of Hiccup syntax into a React element. Returns form\n *   unchanged if it is not a vector.\n */\nreagent.core.as_element \x3d (function reagent$core$as_element(var_args){\nvar G__67423 \x3d arguments.length;\nswitch (G__67423) {\ncase 1:\nreturn reagent.core.as_element.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.as_element.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.as_element.cljs$core$IFn$_invoke$arity$1 \x3d (function (form){\nreturn reagent.impl.protocols.as_element(reagent.impl.template.default_compiler,form);\n}));\n\n(reagent.core.as_element.cljs$core$IFn$_invoke$arity$2 \x3d (function (form,compiler){\nreturn reagent.impl.protocols.as_element(compiler,form);\n}));\n\n(reagent.core.as_element.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns an adapter for a native React class, that may be used\n *   just like a Reagent component function or class in Hiccup forms.\n */\nreagent.core.adapt_react_class \x3d (function reagent$core$adapt_react_class(c){\nif(cljs.core.truth_(c)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Component\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22c\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.template.adapt_react_class(c);\n});\n/**\n * Returns an adapter for a Reagent component, that may be used from\n *   React, for example in JSX. A single argument, props, is passed to\n *   the component, converted to a map.\n */\nreagent.core.reactify_component \x3d (function reagent$core$reactify_component(var_args){\nvar G__67442 \x3d arguments.length;\nswitch (G__67442) {\ncase 1:\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$1 \x3d (function (c){\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2(c,reagent.impl.template.default_compiler);\n}));\n\n(reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2 \x3d (function (c,compiler){\nif(cljs.core.truth_(c)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Component\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22c\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.reactify_component(c,compiler);\n}));\n\n(reagent.core.reactify_component.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Creates JS class based on provided Clojure map, for example:\n * \n *   ```cljs\n *   {;; Constructor\n * :constructor (fn [this props])\n * :get-initial-state (fn [this])\n * ;; Static methods\n * :get-derived-state-from-props (fn [props state] partial-state)\n * :get-derived-state-from-error (fn [error] partial-state)\n * ;; Methods\n * :get-snapshot-before-update (fn [this old-argv new-argv] snapshot)\n * :should-component-update (fn [this old-argv new-argv])\n * :component-did-mount (fn [this])\n * :component-did-update (fn [this old-argv old-state snapshot])\n * :component-will-unmount (fn [this])\n * :component-did-catch (fn [this error info])\n * :reagent-render (fn [args....])\n * ;; Or alternatively:\n * :render (fn [this])\n * ;; Deprecated methods:\n * :UNSAFE_component-will-receive-props (fn [this new-argv])\n * :UNSAFE_component-will-update (fn [this new-argv new-state])\n * :UNSAFE_component-will-mount (fn [this])}\n *   ```\n * \n *   Everything is optional, except either :reagent-render or :render.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n * \n *   State can be initialized using constructor, which matches React.Component class,\n *   or using getInitialState which matches old React createClass function and is\n *   now implemented by Reagent for compatibility.\n * \n *   State can usually be anything, e.g. Cljs object. But if using getDerivedState\n *   methods, the state has to be plain JS object as React implementation uses\n *   Object.assign to merge partial state into the current state.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.core.create_class \x3d (function reagent$core$create_class(var_args){\nvar G__67446 \x3d arguments.length;\nswitch (G__67446) {\ncase 1:\nreturn reagent.core.create_class.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.create_class.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.create_class.cljs$core$IFn$_invoke$arity$1 \x3d (function (spec){\nreturn reagent.impl.component.create_class(spec,reagent.impl.template.default_compiler);\n}));\n\n(reagent.core.create_class.cljs$core$IFn$_invoke$arity$2 \x3d (function (spec,compiler){\nreturn reagent.impl.component.create_class(spec,compiler);\n}));\n\n(reagent.core.create_class.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the current React component (a.k.a `this`) in a component\n *   function.\n */\nreagent.core.current_component \x3d (function reagent$core$current_component(){\nreturn reagent.impl.component._STAR_current_component_STAR_;\n});\n/**\n * Returns an atom containing a components state.\n */\nreagent.core.state_atom \x3d (function reagent$core$state_atom(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.state_atom(this$);\n});\n/**\n * Returns the state of a component, as set with replace-state or set-state.\n *   Equivalent to `(deref (r/state-atom this))`\n */\nreagent.core.state \x3d (function reagent$core$state(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.deref(reagent.core.state_atom(this$));\n});\n/**\n * Set state of a component.\n *   Equivalent to `(reset! (state-atom this) new-state)`\n */\nreagent.core.replace_state \x3d (function reagent$core$replace_state(this$,new_state){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nif((((new_state \x3d\x3d null)) || (cljs.core.map_QMARK_(new_state)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a valid new state, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new_state], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/or (clojure.core/nil? new-state) (clojure.core/map? new-state))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.reset_BANG_(reagent.core.state_atom(this$),new_state);\n});\n/**\n * Merge component state with new-state.\n *   Equivalent to `(swap! (state-atom this) merge new-state)`\n */\nreagent.core.set_state \x3d (function reagent$core$set_state(this$,new_state){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nif((((new_state \x3d\x3d null)) || (cljs.core.map_QMARK_(new_state)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a valid new state, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new_state], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/or (clojure.core/nil? new-state) (clojure.core/map? new-state))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.core.state_atom(this$),cljs.core.merge,new_state);\n});\n/**\n * Force a component to re-render immediately.\n * \n *   If the second argument is true, child components will also be\n *   re-rendered, even is their arguments have not changed.\n */\nreagent.core.force_update \x3d (function reagent$core$force_update(var_args){\nvar G__67469 \x3d arguments.length;\nswitch (G__67469) {\ncase 1:\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.force_update.cljs$core$IFn$_invoke$arity$1 \x3d (function (this$){\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$2(this$,false);\n}));\n\n(reagent.core.force_update.cljs$core$IFn$_invoke$arity$2 \x3d (function (this$,deep){\nreagent.ratom.flush_BANG_();\n\nreagent.impl.util.force_update(this$,deep);\n\nreturn reagent.impl.batching.flush_after_render();\n}));\n\n(reagent.core.force_update.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the props passed to a component.\n */\nreagent.core.props \x3d (function reagent$core$props(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_props(this$);\n});\n/**\n * Returns the children passed to a component.\n */\nreagent.core.children \x3d (function reagent$core$children(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_children(this$);\n});\n/**\n * Returns the entire Hiccup form passed to the component.\n */\nreagent.core.argv \x3d (function reagent$core$argv(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_argv(this$);\n});\n/**\n * Function which normalizes and combines class values to a string\n * \n *   Reagent allows classes to be defined as:\n *   - Strings\n *   - Named objects (Symbols or Keywords)\n *   - Collections of previous types\n */\nreagent.core.class_names \x3d (function reagent$core$class_names(var_args){\nvar G__67515 \x3d arguments.length;\nswitch (G__67515) {\ncase 0:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___67840 \x3d arguments.length;\nvar i__4830__auto___67841 \x3d (0);\nwhile(true){\nif((i__4830__auto___67841 \x3c len__4829__auto___67840)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___67841]));\n\nvar G__67842 \x3d (i__4830__auto___67841 + (1));\ni__4830__auto___67841 \x3d G__67842;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((2)),(0),null));\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$1 \x3d (function (class$){\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$);\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$2 \x3d (function (class1,class2){\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class1,class2);\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$variadic \x3d (function (class1,class2,others){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(reagent.impl.util.class_names,class1,class2,others);\n}));\n\n/** @this {Function} */\n(reagent.core.class_names.cljs$lang$applyTo \x3d (function (seq67512){\nvar G__67513 \x3d cljs.core.first(seq67512);\nvar seq67512__$1 \x3d cljs.core.next(seq67512);\nvar G__67514 \x3d cljs.core.first(seq67512__$1);\nvar seq67512__$2 \x3d cljs.core.next(seq67512__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67513,G__67514,seq67512__$2);\n}));\n\n(reagent.core.class_names.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Utility function that merges some maps, handling `:class` and `:style`.\n * \n *   The :class value is always normalized (using `class-names`) even if no\n *   merging is done.\n */\nreagent.core.merge_props \x3d (function reagent$core$merge_props(var_args){\nvar G__67551 \x3d arguments.length;\nswitch (G__67551) {\ncase 0:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___67851 \x3d arguments.length;\nvar i__4830__auto___67853 \x3d (0);\nwhile(true){\nif((i__4830__auto___67853 \x3c len__4829__auto___67851)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___67853]));\n\nvar G__67854 \x3d (i__4830__auto___67853 + (1));\ni__4830__auto___67853 \x3d G__67854;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((2)),(0),null));\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$1 \x3d (function (defaults){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1(defaults);\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$2 \x3d (function (defaults,props){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2(defaults,props);\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$variadic \x3d (function (defaults,props,others){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(reagent.impl.util.merge_props,defaults,props,others);\n}));\n\n/** @this {Function} */\n(reagent.core.merge_props.cljs$lang$applyTo \x3d (function (seq67547){\nvar G__67548 \x3d cljs.core.first(seq67547);\nvar seq67547__$1 \x3d cljs.core.next(seq67547);\nvar G__67549 \x3d cljs.core.first(seq67547__$1);\nvar seq67547__$2 \x3d cljs.core.next(seq67547__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67548,G__67549,seq67547__$2);\n}));\n\n(reagent.core.merge_props.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Render dirty components immediately.\n * \n *   Note that this may not work in event handlers, since React.js does\n *   batching of updates there.\n */\nreagent.core.flush \x3d (function reagent$core$flush(){\nreturn reagent.impl.batching.flush();\n});\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n *   Reagent components that derefs one of these are automatically\n *   re-rendered.\n */\nreagent.core.atom \x3d (function reagent$core$atom(var_args){\nvar G__67589 \x3d arguments.length;\nswitch (G__67589) {\ncase 1:\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4850__auto__ \x3d [];\nvar len__4829__auto___67863 \x3d arguments.length;\nvar i__4830__auto___67864 \x3d (0);\nwhile(true){\nif((i__4830__auto___67864 \x3c len__4829__auto___67863)){\nargs_arr__4850__auto__.push((arguments[i__4830__auto___67864]));\n\nvar G__67868 \x3d (i__4830__auto___67864 + (1));\ni__4830__auto___67864 \x3d G__67868;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4851__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((1)),(0),null));\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4851__auto__);\n\n}\n});\n\n(reagent.core.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(reagent.core.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,rest){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(reagent.ratom.atom,x,rest);\n}));\n\n/** @this {Function} */\n(reagent.core.atom.cljs$lang$applyTo \x3d (function (seq67587){\nvar G__67588 \x3d cljs.core.first(seq67587);\nvar seq67587__$1 \x3d cljs.core.next(seq67587);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67588,seq67587__$1);\n}));\n\n(reagent.core.atom.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Takes a function and optional arguments, and returns a derefable\n *   containing the output of that function. If the function derefs\n *   Reagent atoms (or track, etc), the value will be updated whenever\n *   the atom changes.\n * \n *   In other words, `@(track foo bar)` will produce the same result\n *   as `(foo bar)`, but foo will only be called again when the atoms it\n *   depends on changes, and will only trigger updates of components when\n *   its result changes.\n * \n *   track is lazy, i.e the function is only evaluated on deref.\n */\nreagent.core.track \x3d (function reagent$core$track(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67871 \x3d arguments.length;\nvar i__4830__auto___67872 \x3d (0);\nwhile(true){\nif((i__4830__auto___67872 \x3c len__4829__auto___67871)){\nargs__4835__auto__.push((arguments[i__4830__auto___67872]));\n\nvar G__67873 \x3d (i__4830__auto___67872 + (1));\ni__4830__auto___67872 \x3d G__67873;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.core.track.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.core.track.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.track.cljs$lang$applyTo \x3d (function (seq67631){\nvar G__67632 \x3d cljs.core.first(seq67631);\nvar seq67631__$1 \x3d cljs.core.next(seq67631);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67632,seq67631__$1);\n}));\n\n/**\n * An eager version of track. The function passed is called\n *   immediately, and continues to be called when needed, until stopped\n *   with dispose!.\n */\nreagent.core.track_BANG_ \x3d (function reagent$core$track_BANG_(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67874 \x3d arguments.length;\nvar i__4830__auto___67875 \x3d (0);\nwhile(true){\nif((i__4830__auto___67875 \x3c len__4829__auto___67874)){\nargs__4835__auto__.push((arguments[i__4830__auto___67875]));\n\nvar G__67877 \x3d (i__4830__auto___67875 + (1));\ni__4830__auto___67875 \x3d G__67877;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.core.track_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.core.track_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.track_BANG_.cljs$lang$applyTo \x3d (function (seq67664){\nvar G__67665 \x3d cljs.core.first(seq67664);\nvar seq67664__$1 \x3d cljs.core.next(seq67664);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67665,seq67664__$1);\n}));\n\n/**\n * Stop the result of track! from updating.\n */\nreagent.core.dispose_BANG_ \x3d (function reagent$core$dispose_BANG_(x){\nreturn reagent.ratom.dispose_BANG_(x);\n});\n/**\n * Provide a combination of value and callback, that looks like an atom.\n * \n *   The first argument can be any value, that will be returned when the\n *   result is deref\x27ed.\n * \n *   The second argument should be a function, that is called with the\n *   optional extra arguments provided to wrap, and the new value of the\n *   resulting \x27atom\x27.\n * \n *   Use for example like this:\n * \n *   ```cljs\n *   (wrap (:foo @state)\n *      swap! state assoc :foo)\n *   ```\n * \n *   Probably useful only for passing to child components.\n */\nreagent.core.wrap \x3d (function reagent$core$wrap(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67882 \x3d arguments.length;\nvar i__4830__auto___67883 \x3d (0);\nwhile(true){\nif((i__4830__auto___67883 \x3c len__4829__auto___67882)){\nargs__4835__auto__.push((arguments[i__4830__auto___67883]));\n\nvar G__67884 \x3d (i__4830__auto___67883 + (1));\ni__4830__auto___67883 \x3d G__67884;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((2) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((2)),(0),null)):null);\nreturn reagent.core.wrap.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4836__auto__);\n});\n\n(reagent.core.wrap.cljs$core$IFn$_invoke$arity$variadic \x3d (function (value,reset_fn,args){\nif(cljs.core.ifn_QMARK_(reset_fn)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reset_fn], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? reset-fn)\x22].join(\x27\x27)));\n}\n\nreturn reagent.ratom.make_wrapper(value,reset_fn,args);\n}));\n\n(reagent.core.wrap.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.core.wrap.cljs$lang$applyTo \x3d (function (seq67706){\nvar G__67707 \x3d cljs.core.first(seq67706);\nvar seq67706__$1 \x3d cljs.core.next(seq67706);\nvar G__67708 \x3d cljs.core.first(seq67706__$1);\nvar seq67706__$2 \x3d cljs.core.next(seq67706__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67707,G__67708,seq67706__$2);\n}));\n\n/**\n * Provide a cursor into a Reagent atom.\n * \n *   Behaves like a Reagent atom but focuses updates and derefs to\n *   the specified path within the wrapped Reagent atom. e.g.,\n * \n *   ```cljs\n *   (let [c (cursor ra [:nested :content])]\n *  ... @c ;; equivalent to (get-in @ra [:nested :content])\n *  ... (reset! c 42) ;; equivalent to (swap! ra assoc-in [:nested :content] 42)\n *  ... (swap! c inc) ;; equivalence to (swap! ra update-in [:nested :content] inc)\n *  )\n *   ```\n * \n *   The first parameter can also be a function, that should look\n *   something like this:\n * \n *   ```cljs\n *   (defn set-get\n *  ([k] (get-in @state k))\n *  ([k v] (swap! state assoc-in k v)))\n *   ```\n * \n *   The function will be called with one argument \u2013 the path passed to\n *   cursor \u2013 when the cursor is deref\x27ed, and two arguments (path and\n *   new value) when the cursor is modified.\n * \n *   Given that set-get function, (and that state is a Reagent atom, or\n *   another cursor) these cursors are equivalent:\n *   `(cursor state [:foo])` and `(cursor set-get [:foo])`.\n * \n *   Note that a cursor is lazy: its value will not change until it is\n *   used. This may be noticed with add-watch.\n */\nreagent.core.cursor \x3d (function reagent$core$cursor(src,path){\nreturn reagent.ratom.cursor(src,path);\n});\n/**\n * Swaps the value of a to be `(apply f current-value-of-atom args)`.\n * \n *   rswap! works like swap!, except that recursive calls to rswap! on\n *   the same atom are allowed \u2013 and it always returns nil.\n */\nreagent.core.rswap_BANG_ \x3d (function reagent$core$rswap_BANG_(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67891 \x3d arguments.length;\nvar i__4830__auto___67892 \x3d (0);\nwhile(true){\nif((i__4830__auto___67892 \x3c len__4829__auto___67891)){\nargs__4835__auto__.push((arguments[i__4830__auto___67892]));\n\nvar G__67893 \x3d (i__4830__auto___67892 + (1));\ni__4830__auto___67892 \x3d G__67893;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((2) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((2)),(0),null)):null);\nreturn reagent.core.rswap_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4836__auto__);\n});\n\n(reagent.core.rswap_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,args){\nif((((!((a \x3d\x3d null))))?(((((a.cljs$lang$protocol_mask$partition1$ \x26 (16384))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d a.cljs$core$IAtom$))))?true:(((!a.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,a):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,a))){\n} else {\nthrow (new Error(\x22Assert failed: (satisfies? IAtom a)\x22));\n}\n\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nif(cljs.core.truth_(a.rswapping)){\n(function (){var or__4223__auto__ \x3d a.rswapfs;\nif(cljs.core.truth_(or__4223__auto__)){\nreturn or__4223__auto__;\n} else {\nreturn (a.rswapfs \x3d []);\n}\n})().push((function (p1__67764_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,p1__67764_SHARP_,args);\n}));\n} else {\n(a.rswapping \x3d true);\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,(function (state){\nvar s \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,state,args);\nwhile(true){\nvar temp__5755__auto__ \x3d (function (){var G__67784 \x3d a;\nvar G__67784__$1 \x3d (((G__67784 \x3d\x3d null))?null:G__67784.rswapfs);\nif((G__67784__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__67784__$1.shift();\n}\n})();\nif((temp__5755__auto__ \x3d\x3d null)){\nreturn s;\n} else {\nvar sf \x3d temp__5755__auto__;\nvar G__67898 \x3d (sf.cljs$core$IFn$_invoke$arity$1 ? sf.cljs$core$IFn$_invoke$arity$1(s) : sf.call(null,s));\ns \x3d G__67898;\ncontinue;\n}\nbreak;\n}\n}));\n}finally {(a.rswapping \x3d false);\n}}\n\nreturn null;\n}));\n\n(reagent.core.rswap_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.core.rswap_BANG_.cljs$lang$applyTo \x3d (function (seq67766){\nvar G__67767 \x3d cljs.core.first(seq67766);\nvar seq67766__$1 \x3d cljs.core.next(seq67766);\nvar G__67768 \x3d cljs.core.first(seq67766__$1);\nvar seq67766__$2 \x3d cljs.core.next(seq67766__$1);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67767,G__67768,seq67766__$2);\n}));\n\n/**\n * Run f using requestAnimationFrame or equivalent.\n * \n *   f will be called just before components are rendered.\n */\nreagent.core.next_tick \x3d (function reagent$core$next_tick(f){\nreturn reagent.impl.batching.do_before_flush(f);\n});\n/**\n * Run f using requestAnimationFrame or equivalent.\n * \n *   f will be called just after any queued renders in the next animation\n *   frame (and even if no renders actually occur).\n */\nreagent.core.after_render \x3d (function reagent$core$after_render(f){\nreturn reagent.impl.batching.do_after_render(f);\n});\n/**\n * Works just like clojure.core/partial, but the result can be compared with \x3d\n */\nreagent.core.partial \x3d (function reagent$core$partial(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67902 \x3d arguments.length;\nvar i__4830__auto___67904 \x3d (0);\nwhile(true){\nif((i__4830__auto___67904 \x3c len__4829__auto___67902)){\nargs__4835__auto__.push((arguments[i__4830__auto___67904]));\n\nvar G__67905 \x3d (i__4830__auto___67904 + (1));\ni__4830__auto___67904 \x3d G__67905;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((1) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.partial.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\n});\n\n(reagent.core.partial.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nreturn reagent.impl.util.make_partial_fn(f,args);\n}));\n\n(reagent.core.partial.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.partial.cljs$lang$applyTo \x3d (function (seq67792){\nvar G__67793 \x3d cljs.core.first(seq67792);\nvar seq67792__$1 \x3d cljs.core.next(seq67792);\nvar self__4816__auto__ \x3d this;\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67793,seq67792__$1);\n}));\n\n/**\n * Creates Compiler object with given `opts`,\n *   this can be passed to `render`, `as-element` and other functions to control\n *   how they turn the Reagent-style Hiccup into React components and elements.\n */\nreagent.core.create_compiler \x3d (function reagent$core$create_compiler(opts){\nreturn reagent.impl.template.create_compiler(opts);\n});\n/**\n * Globally sets the Compiler object used by `render`, `as-element` and other\n *   calls by default, when no `compiler` parameter is provided.\n * \n *   Use `nil` value to restore the original default compiler.\n */\nreagent.core.set_default_compiler_BANG_ \x3d (function reagent$core$set_default_compiler_BANG_(compiler){\nreturn reagent.impl.template.set_default_compiler_BANG_((((compiler \x3d\x3d null))?reagent.impl.template.default_compiler_STAR_:compiler));\n});\nreagent.core.render \x3d (function reagent$core$render(var_args){\nvar args__4835__auto__ \x3d [];\nvar len__4829__auto___67907 \x3d arguments.length;\nvar i__4830__auto___67908 \x3d (0);\nwhile(true){\nif((i__4830__auto___67908 \x3c len__4829__auto___67907)){\nargs__4835__auto__.push((arguments[i__4830__auto___67908]));\n\nvar G__67909 \x3d (i__4830__auto___67908 + (1));\ni__4830__auto___67908 \x3d G__67909;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4836__auto__ \x3d ((((0) \x3c args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((0)),(0),null)):null);\nreturn reagent.core.render.cljs$core$IFn$_invoke$arity$variadic(argseq__4836__auto__);\n});\n\n(reagent.core.render.cljs$core$IFn$_invoke$arity$variadic \x3d (function (_){\nthrow (new Error(\x22Reagent.core/render function was moved to reagent.dom namespace in Reagent v1.0.\x22));\n}));\n\n(reagent.core.render.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(reagent.core.render.cljs$lang$applyTo \x3d (function (seq67807){\nvar self__4817__auto__ \x3d this;\nreturn self__4817__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq67807));\n}));\n\n");
SHADOW_ENV.evalLoad("sevenguis.counter.js", true , "goog.provide(\x27sevenguis.counter\x27);\nsevenguis.counter.click_count1 \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nsevenguis.counter.main \x3d (function sevenguis$counter$main(){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.UI-task-center\x22,\x22div.UI-task-center\x22,1773518898),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22label.UI-counter\x22,\x22label.UI-counter\x22,1653917519),cljs.core.deref(sevenguis.counter.click_count1)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22button.UI-button\x22,\x22button.UI-button\x22,1720363561),\x22Counter\x22,(function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(sevenguis.counter.click_count1,cljs.core.inc);\n})], null)], null);\n});\n");
SHADOW_ENV.evalLoad("shadow.module.counter.append.js", false , "\nshadow.cljs.devtools.client.env.module_loaded(\x27counter\x27);\n;\nSHADOW_ENV.setLoaded(\x22shadow.js.js\x22);\nSHADOW_ENV.setLoaded(\x22module$node_modules$object_assign$index.js\x22);\nSHADOW_ENV.setLoaded(\x22module$node_modules$react$cjs$react_production_min.js\x22);\nSHADOW_ENV.setLoaded(\x22module$node_modules$react$cjs$react_development.js\x22);\nSHADOW_ENV.setLoaded(\x22module$node_modules$react$index.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.debug.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.util.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.batching.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.protocols.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.ratom.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.component.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.input.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.impl.template.js\x22);\nSHADOW_ENV.setLoaded(\x22reagent.core.js\x22);\nSHADOW_ENV.setLoaded(\x22sevenguis.counter.js\x22);\nSHADOW_ENV.setLoaded(\x22shadow.module.counter.append.js\x22);");